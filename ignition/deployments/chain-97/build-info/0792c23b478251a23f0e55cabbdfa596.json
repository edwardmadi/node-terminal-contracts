{
  "id": "0792c23b478251a23f0e55cabbdfa596",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "contracts/test/ERC20TestToken2.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.24;\n\nimport {ERC20Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\n\ncontract ERC20TestToken2 is ERC20Upgradeable {\n    uint8 private _decimals;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(uint256 decimals_) public initializer {\n        __ERC20_init(\"ERC20 Test Token\", \"ETT\");\n        _decimals = uint8(decimals_);\n        _mint(msg.sender, 10 ** 9 * 10 ** decimals_); // 1 billion\n    }\n\n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n\n    function mint(address account, uint256 amount) external {\n        _mint(account, amount);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout",
            "devdoc",
            "userdoc"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              253
            ]
          },
          "id": 254,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:24:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Initializable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "139:2209:0",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
              },
              "fullyImplemented": true,
              "id": 253,
              "linearizedBaseContracts": [
                253
              ],
              "name": "Initializable",
              "nameLocation": "2367:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Initializable.InitializableStorage",
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:293:0",
                    "text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
                  },
                  "id": 10,
                  "members": [
                    {
                      "constant": false,
                      "id": 6,
                      "mutability": "mutable",
                      "name": "_initialized",
                      "nameLocation": "2820:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 10,
                      "src": "2813:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 5,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2813:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9,
                      "mutability": "mutable",
                      "name": "_initializing",
                      "nameLocation": "2955:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 10,
                      "src": "2950:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 8,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2950:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InitializableStorage",
                  "nameLocation": "2692:20:0",
                  "nodeType": "StructDefinition",
                  "scope": 253,
                  "src": "2685:290:0",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 13,
                  "mutability": "constant",
                  "name": "INITIALIZABLE_STORAGE",
                  "nameLocation": "3123:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3098:115:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3147:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
                      "typeString": "int_const 1089...(70 digits omitted)...9600"
                    },
                    "value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "3220:60:0",
                    "text": " @dev The contract is already initialized."
                  },
                  "errorSelector": "f92ee8a9",
                  "id": 16,
                  "name": "InvalidInitialization",
                  "nameLocation": "3291:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3312:2:0"
                  },
                  "src": "3285:30:0"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "3321:57:0",
                    "text": " @dev The contract is not initializing."
                  },
                  "errorSelector": "d7e6bcf8",
                  "id": 19,
                  "name": "NotInitializing",
                  "nameLocation": "3389:15:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3404:2:0"
                  },
                  "src": "3383:24:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 20,
                    "nodeType": "StructuredDocumentation",
                    "src": "3413:90:0",
                    "text": " @dev Triggered when the contract has been initialized or reinitialized."
                  },
                  "eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
                  "id": 24,
                  "name": "Initialized",
                  "nameLocation": "3514:11:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "3533:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "3526:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3525:16:0"
                  },
                  "src": "3508:34:0"
                },
                {
                  "body": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "4092:1081:0",
                    "statements": [
                      {
                        "assignments": [
                          29
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4187:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 106,
                            "src": "4158:30:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 28,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 27,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "4158:20:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10,
                                "src": "4158:20:0"
                              },
                              "referencedDeclaration": 10,
                              "src": "4158:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "4191:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4191:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4158:59:0"
                      },
                      {
                        "assignments": [
                          34
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "4284:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 106,
                            "src": "4279:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 33,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4279:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 38,
                        "initialValue": {
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4301:16:0",
                          "subExpression": {
                            "expression": {
                              "id": 35,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "4302:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 36,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4304:13:0",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "4302:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4279:38:0"
                      },
                      {
                        "assignments": [
                          40
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40,
                            "mutability": "mutable",
                            "name": "initialized",
                            "nameLocation": "4334:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 106,
                            "src": "4327:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 39,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "4327:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 43,
                        "initialValue": {
                          "expression": {
                            "id": 41,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "4348:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4350:12:0",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "4348:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4327:35:0"
                      },
                      {
                        "assignments": [
                          45
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45,
                            "mutability": "mutable",
                            "name": "initialSetup",
                            "nameLocation": "4711:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 106,
                            "src": "4706:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 44,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4706:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 51,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 46,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4726:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4726:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 49,
                            "name": "isTopLevelCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4746:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4726:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4706:54:0"
                      },
                      {
                        "assignments": [
                          53
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53,
                            "mutability": "mutable",
                            "name": "construction",
                            "nameLocation": "4775:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 106,
                            "src": "4770:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 52,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4770:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 66,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 54,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4790:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 55,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4805:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4790:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 59,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4818:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Initializable_$253",
                                        "typeString": "contract Initializable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Initializable_$253",
                                        "typeString": "contract Initializable"
                                      }
                                    ],
                                    "id": 58,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4810:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 57,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4810:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 60,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4810:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 61,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4824:4:0",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "4810:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4829:6:0",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4810:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4839:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4810:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4790:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4770:70:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4855:13:0",
                            "subExpression": {
                              "id": 67,
                              "name": "initialSetup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "4856:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 70,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4872:13:0",
                            "subExpression": {
                              "id": 69,
                              "name": "construction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "4873:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4855:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76,
                        "nodeType": "IfStatement",
                        "src": "4851:91:0",
                        "trueBody": {
                          "id": 75,
                          "nodeType": "Block",
                          "src": "4887:55:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 72,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "4908:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4908:23:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 74,
                              "nodeType": "RevertStatement",
                              "src": "4901:30:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 77,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "4951:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4953:12:0",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "4951:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4968:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4951:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "4951:18:0"
                      },
                      {
                        "condition": {
                          "id": 83,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "4983:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 91,
                        "nodeType": "IfStatement",
                        "src": "4979:67:0",
                        "trueBody": {
                          "id": 90,
                          "nodeType": "Block",
                          "src": "4999:47:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 84,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "5013:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 86,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5015:13:0",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9,
                                  "src": "5013:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 87,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5031:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5013:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 89,
                              "nodeType": "ExpressionStatement",
                              "src": "5013:22:0"
                            }
                          ]
                        }
                      },
                      {
                        "id": 92,
                        "nodeType": "PlaceholderStatement",
                        "src": "5055:1:0"
                      },
                      {
                        "condition": {
                          "id": 93,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "5070:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 105,
                        "nodeType": "IfStatement",
                        "src": "5066:101:0",
                        "trueBody": {
                          "id": 104,
                          "nodeType": "Block",
                          "src": "5086:81:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 94,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "5100:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 96,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5102:13:0",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9,
                                  "src": "5100:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 97,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5118:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5100:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 99,
                              "nodeType": "ExpressionStatement",
                              "src": "5100:23:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5154:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 100,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "5142:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5142:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 103,
                              "nodeType": "EmitStatement",
                              "src": "5137:19:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "3548:516:0",
                    "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
                  },
                  "id": 107,
                  "name": "initializer",
                  "nameLocation": "4078:11:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4089:2:0"
                  },
                  "src": "4069:1104:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 153,
                    "nodeType": "Block",
                    "src": "6291:392:0",
                    "statements": [
                      {
                        "assignments": [
                          114
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 114,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "6386:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 153,
                            "src": "6357:30:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 113,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 112,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "6357:20:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10,
                                "src": "6357:20:0"
                              },
                              "referencedDeclaration": 10,
                              "src": "6357:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 117,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 115,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "6390:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6357:59:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 118,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "6431:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6433:13:0",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "6431:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 120,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 114,
                                "src": "6450:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6452:12:0",
                              "memberName": "_initialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6,
                              "src": "6450:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 122,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "6468:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "6450:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6431:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 129,
                        "nodeType": "IfStatement",
                        "src": "6427:105:0",
                        "trueBody": {
                          "id": 128,
                          "nodeType": "Block",
                          "src": "6477:55:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 125,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "6498:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6498:23:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 127,
                              "nodeType": "RevertStatement",
                              "src": "6491:30:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 130,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "6541:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6543:12:0",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "6541:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 133,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "6558:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6541:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "6541:24:0"
                      },
                      {
                        "expression": {
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 136,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "6575:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6577:13:0",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "6575:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6593:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6575:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "6575:22:0"
                      },
                      {
                        "id": 142,
                        "nodeType": "PlaceholderStatement",
                        "src": "6607:1:0"
                      },
                      {
                        "expression": {
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 143,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "6618:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6620:13:0",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "6618:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6636:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6618:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 148,
                        "nodeType": "ExpressionStatement",
                        "src": "6618:23:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 150,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "6668:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 149,
                            "name": "Initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "6656:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                              "typeString": "function (uint64)"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6656:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "EmitStatement",
                        "src": "6651:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 108,
                    "nodeType": "StructuredDocumentation",
                    "src": "5179:1068:0",
                    "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
                  },
                  "id": 154,
                  "name": "reinitializer",
                  "nameLocation": "6261:13:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "6282:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "6275:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6275:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6274:16:0"
                  },
                  "src": "6252:431:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 161,
                    "nodeType": "Block",
                    "src": "6921:48:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 157,
                            "name": "_checkInitializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "6931:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6931:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 159,
                        "nodeType": "ExpressionStatement",
                        "src": "6931:20:0"
                      },
                      {
                        "id": 160,
                        "nodeType": "PlaceholderStatement",
                        "src": "6961:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 155,
                    "nodeType": "StructuredDocumentation",
                    "src": "6689:199:0",
                    "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                  },
                  "id": 162,
                  "name": "onlyInitializing",
                  "nameLocation": "6902:16:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6918:2:0"
                  },
                  "src": "6893:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "7136:89:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7150:18:0",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 166,
                              "name": "_isInitializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "7151:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7151:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 173,
                        "nodeType": "IfStatement",
                        "src": "7146:73:0",
                        "trueBody": {
                          "id": 172,
                          "nodeType": "Block",
                          "src": "7170:49:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 169,
                                  "name": "NotInitializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "7191:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7191:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 171,
                              "nodeType": "RevertStatement",
                              "src": "7184:24:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "6975:104:0",
                    "text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
                  },
                  "id": 175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkInitializing",
                  "nameLocation": "7093:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7111:2:0"
                  },
                  "returnParameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7136:0:0"
                  },
                  "scope": 253,
                  "src": "7084:141:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 220,
                    "nodeType": "Block",
                    "src": "7760:373:0",
                    "statements": [
                      {
                        "assignments": [
                          181
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 181,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7855:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 220,
                            "src": "7826:30:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 180,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 179,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "7826:20:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10,
                                "src": "7826:20:0"
                              },
                              "referencedDeclaration": 10,
                              "src": "7826:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 184,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 182,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "7859:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7859:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7826:59:0"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 185,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "7900:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7902:13:0",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "7900:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 191,
                        "nodeType": "IfStatement",
                        "src": "7896:76:0",
                        "trueBody": {
                          "id": 190,
                          "nodeType": "Block",
                          "src": "7917:55:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 187,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "7938:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7938:23:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 189,
                              "nodeType": "RevertStatement",
                              "src": "7931:30:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 192,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "7985:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7987:12:0",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "7985:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8008:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 195,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8008:6:0",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 194,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8003:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8003:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8016:3:0",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8003:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "7985:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 219,
                        "nodeType": "IfStatement",
                        "src": "7981:146:0",
                        "trueBody": {
                          "id": 218,
                          "nodeType": "Block",
                          "src": "8021:106:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 200,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 181,
                                    "src": "8035:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 202,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8037:12:0",
                                  "memberName": "_initialized",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6,
                                  "src": "8035:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8057:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 204,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8057:6:0",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        }
                                      ],
                                      "id": 203,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8052:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8052:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint64",
                                      "typeString": "type(uint64)"
                                    }
                                  },
                                  "id": 207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8065:3:0",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8052:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "8035:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 209,
                              "nodeType": "ExpressionStatement",
                              "src": "8035:33:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 213,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8104:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 212,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8104:6:0",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          }
                                        ],
                                        "id": 211,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "8099:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 214,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8099:12:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint64",
                                        "typeString": "type(uint64)"
                                      }
                                    },
                                    "id": 215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8112:3:0",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "8099:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 210,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "8087:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8087:29:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 217,
                              "nodeType": "EmitStatement",
                              "src": "8082:34:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 176,
                    "nodeType": "StructuredDocumentation",
                    "src": "7231:475:0",
                    "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                  },
                  "id": 221,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disableInitializers",
                  "nameLocation": "7720:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7740:2:0"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7760:0:0"
                  },
                  "scope": 253,
                  "src": "7711:422:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 231,
                    "nodeType": "Block",
                    "src": "8308:63:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 227,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "8325:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8325:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8352:12:0",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "8325:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 226,
                        "id": 230,
                        "nodeType": "Return",
                        "src": "8318:46:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 222,
                    "nodeType": "StructuredDocumentation",
                    "src": "8139:99:0",
                    "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                  },
                  "id": 232,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializedVersion",
                  "nameLocation": "8252:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8274:2:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "8300:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8300:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8299:8:0"
                  },
                  "scope": 253,
                  "src": "8243:128:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "8543:64:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 238,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "8560:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8560:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8587:13:0",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "8560:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 237,
                        "id": 241,
                        "nodeType": "Return",
                        "src": "8553:47:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 233,
                    "nodeType": "StructuredDocumentation",
                    "src": "8377:105:0",
                    "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                  },
                  "id": 243,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isInitializing",
                  "nameLocation": "8496:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8511:2:0"
                  },
                  "returnParameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "8537:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8537:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8536:6:0"
                  },
                  "scope": 253,
                  "src": "8487:120:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "8827:80:0",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "8846:55:0",
                          "nodeType": "YulBlock",
                          "src": "8846:55:0",
                          "statements": [
                            {
                              "nativeSrc": "8860:31:0",
                              "nodeType": "YulAssignment",
                              "src": "8860:31:0",
                              "value": {
                                "name": "INITIALIZABLE_STORAGE",
                                "nativeSrc": "8870:21:0",
                                "nodeType": "YulIdentifier",
                                "src": "8870:21:0"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "8860:6:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "8860:6:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 248,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "8860:6:0",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 13,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8870:21:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 250,
                        "nodeType": "InlineAssembly",
                        "src": "8837:64:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 244,
                    "nodeType": "StructuredDocumentation",
                    "src": "8613:67:0",
                    "text": " @dev Returns a pointer to the storage namespace."
                  },
                  "id": 252,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializableStorage",
                  "nameLocation": "8746:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8770:2:0"
                  },
                  "returnParameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "8824:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "8795:30:0",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                          "typeString": "struct Initializable.InitializableStorage"
                        },
                        "typeName": {
                          "id": 247,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 246,
                            "name": "InitializableStorage",
                            "nameLocations": [
                              "8795:20:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10,
                            "src": "8795:20:0"
                          },
                          "referencedDeclaration": 10,
                          "src": "8795:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8794:32:0"
                  },
                  "scope": 253,
                  "src": "8737:170:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 254,
              "src": "2349:6560:0",
              "usedErrors": [
                16,
                19
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "113:8797:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              916
            ],
            "ERC20Upgradeable": [
              870
            ],
            "IERC20": [
              1131
            ],
            "IERC20Errors": [
              958
            ],
            "IERC20Metadata": [
              1157
            ],
            "Initializable": [
              253
            ]
          },
          "id": 871,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 255,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 257,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 871,
              "sourceUnit": 1132,
              "src": "131:70:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 256,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1131,
                    "src": "139:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 259,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 871,
              "sourceUnit": 1158,
              "src": "202:97:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 258,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1157,
                    "src": "210:14:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../../utils/ContextUpgradeable.sol",
              "id": 261,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 871,
              "sourceUnit": 917,
              "src": "300:70:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 260,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 916,
                    "src": "308:18:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "id": 263,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 871,
              "sourceUnit": 1054,
              "src": "371:83:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 262,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 958,
                    "src": "379:12:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../../proxy/utils/Initializable.sol",
              "id": 265,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 871,
              "sourceUnit": 254,
              "src": "455:66:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 264,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 253,
                    "src": "463:13:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 267,
                    "name": "Initializable",
                    "nameLocations": [
                      "1614:13:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 253,
                    "src": "1614:13:1"
                  },
                  "id": 268,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1614:13:1"
                },
                {
                  "baseName": {
                    "id": 269,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "1629:18:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 916,
                    "src": "1629:18:1"
                  },
                  "id": 270,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1629:18:1"
                },
                {
                  "baseName": {
                    "id": 271,
                    "name": "IERC20",
                    "nameLocations": [
                      "1649:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1131,
                    "src": "1649:6:1"
                  },
                  "id": 272,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1649:6:1"
                },
                {
                  "baseName": {
                    "id": 273,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1657:14:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1157,
                    "src": "1657:14:1"
                  },
                  "id": 274,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1657:14:1"
                },
                {
                  "baseName": {
                    "id": 275,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1673:12:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 958,
                    "src": "1673:12:1"
                  },
                  "id": 276,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1673:12:1"
                }
              ],
              "canonicalName": "ERC20Upgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 266,
                "nodeType": "StructuredDocumentation",
                "src": "523:1052:1",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
              },
              "fullyImplemented": true,
              "id": 870,
              "linearizedBaseContracts": [
                870,
                958,
                1157,
                1131,
                916,
                253
              ],
              "name": "ERC20Upgradeable",
              "nameLocation": "1594:16:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ERC20Upgradeable.ERC20Storage",
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "1692:63:1",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
                  },
                  "id": 294,
                  "members": [
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "_balances",
                      "nameLocation": "1826:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "1790:45:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "typeName": {
                        "id": 280,
                        "keyName": "account",
                        "keyNameLocation": "1806:7:1",
                        "keyType": {
                          "id": 278,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1798:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1790:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1817:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "_allowances",
                      "nameLocation": "1910:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "1846:75:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                        "typeString": "mapping(address => mapping(address => uint256))"
                      },
                      "typeName": {
                        "id": 286,
                        "keyName": "account",
                        "keyNameLocation": "1862:7:1",
                        "keyType": {
                          "id": 282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1854:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1846:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 285,
                          "keyName": "spender",
                          "keyNameLocation": "1889:7:1",
                          "keyType": {
                            "id": 283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1881:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "1873:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          },
                          "valueName": "",
                          "valueNameLocation": "-1:-1:-1",
                          "valueType": {
                            "id": 284,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1900:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 289,
                      "mutability": "mutable",
                      "name": "_totalSupply",
                      "nameLocation": "1940:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "1932:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1932:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 291,
                      "mutability": "mutable",
                      "name": "_name",
                      "nameLocation": "1970:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "1963:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 290,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1963:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 293,
                      "mutability": "mutable",
                      "name": "_symbol",
                      "nameLocation": "1992:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "1985:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1985:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ERC20Storage",
                  "nameLocation": "1767:12:1",
                  "nodeType": "StructDefinition",
                  "scope": 870,
                  "src": "1760:246:1",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 297,
                  "mutability": "constant",
                  "name": "ERC20StorageLocation",
                  "nameLocation": "2146:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "2121:114:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2169:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
                      "typeString": "int_const 3743...(69 digits omitted)...2592"
                    },
                    "value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "2316:79:1",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2335:54:1",
                          "nodeType": "YulBlock",
                          "src": "2335:54:1",
                          "statements": [
                            {
                              "nativeSrc": "2349:30:1",
                              "nodeType": "YulAssignment",
                              "src": "2349:30:1",
                              "value": {
                                "name": "ERC20StorageLocation",
                                "nativeSrc": "2359:20:1",
                                "nodeType": "YulIdentifier",
                                "src": "2359:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "2349:6:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2349:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 301,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2349:6:1",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 297,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2359:20:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 303,
                        "nodeType": "InlineAssembly",
                        "src": "2326:63:1"
                      }
                    ]
                  },
                  "id": 305,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getERC20Storage",
                  "nameLocation": "2251:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2267:2:1"
                  },
                  "returnParameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "2313:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "2292:22:1",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                          "typeString": "struct ERC20Upgradeable.ERC20Storage"
                        },
                        "typeName": {
                          "id": 300,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 299,
                            "name": "ERC20Storage",
                            "nameLocations": [
                              "2292:12:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 294,
                            "src": "2292:12:1"
                          },
                          "referencedDeclaration": 294,
                          "src": "2292:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2291:24:1"
                  },
                  "scope": 870,
                  "src": "2242:153:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "2669:55:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 316,
                              "name": "name_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "2702:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 317,
                              "name": "symbol_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "2709:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 315,
                            "name": "__ERC20_init_unchained",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "2679:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2679:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "2679:38:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "2401:171:1",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 321,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 313,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 312,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2652:16:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "2652:16:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2652:16:1"
                    }
                  ],
                  "name": "__ERC20_init",
                  "nameLocation": "2586:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "2613:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "2599:19:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2599:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "2634:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "2620:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2620:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2598:44:1"
                  },
                  "returnParameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2669:0:1"
                  },
                  "scope": 870,
                  "src": "2577:147:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "2832:114:1",
                    "statements": [
                      {
                        "assignments": [
                          332
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 332,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2863:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 348,
                            "src": "2842:22:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 331,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 330,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "2842:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 294,
                                "src": "2842:12:1"
                              },
                              "referencedDeclaration": 294,
                              "src": "2842:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 335,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 333,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2867:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$294_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2867:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2842:43:1"
                      },
                      {
                        "expression": {
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 336,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "2895:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2897:5:1",
                            "memberName": "_name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 291,
                            "src": "2895:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 339,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "2905:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2895:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 341,
                        "nodeType": "ExpressionStatement",
                        "src": "2895:15:1"
                      },
                      {
                        "expression": {
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 342,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "2920:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2922:7:1",
                            "memberName": "_symbol",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 293,
                            "src": "2920:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 345,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "2932:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2920:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 347,
                        "nodeType": "ExpressionStatement",
                        "src": "2920:19:1"
                      }
                    ]
                  },
                  "id": 349,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 328,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 327,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2815:16:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "2815:16:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2815:16:1"
                    }
                  ],
                  "name": "__ERC20_init_unchained",
                  "nameLocation": "2739:22:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "2776:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "2762:19:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "2797:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "2783:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2783:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2761:44:1"
                  },
                  "returnParameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2832:0:1"
                  },
                  "scope": 870,
                  "src": "2730:216:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1144
                  ],
                  "body": {
                    "id": 364,
                    "nodeType": "Block",
                    "src": "3071:84:1",
                    "statements": [
                      {
                        "assignments": [
                          357
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 357,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3102:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 364,
                            "src": "3081:22:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 356,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 355,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "3081:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 294,
                                "src": "3081:12:1"
                              },
                              "referencedDeclaration": 294,
                              "src": "3081:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 360,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 358,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "3106:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$294_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3106:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3081:43:1"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 361,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "3141:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3143:5:1",
                          "memberName": "_name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 291,
                          "src": "3141:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 354,
                        "id": 363,
                        "nodeType": "Return",
                        "src": "3134:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 350,
                    "nodeType": "StructuredDocumentation",
                    "src": "2952:54:1",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 365,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "3020:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3024:2:1"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3056:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3056:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3055:15:1"
                  },
                  "scope": 870,
                  "src": "3011:144:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1150
                  ],
                  "body": {
                    "id": 380,
                    "nodeType": "Block",
                    "src": "3330:86:1",
                    "statements": [
                      {
                        "assignments": [
                          373
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 373,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3361:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 380,
                            "src": "3340:22:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 372,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 371,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "3340:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 294,
                                "src": "3340:12:1"
                              },
                              "referencedDeclaration": 294,
                              "src": "3340:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 376,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 374,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "3365:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$294_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3365:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3340:43:1"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 377,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 373,
                            "src": "3400:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3402:7:1",
                          "memberName": "_symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 293,
                          "src": "3400:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 370,
                        "id": 379,
                        "nodeType": "Return",
                        "src": "3393:16:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 366,
                    "nodeType": "StructuredDocumentation",
                    "src": "3161:102:1",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "3277:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3283:2:1"
                  },
                  "returnParameters": {
                    "id": 370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "3315:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3315:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3314:15:1"
                  },
                  "scope": 870,
                  "src": "3268:148:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1156
                  ],
                  "body": {
                    "id": 389,
                    "nodeType": "Block",
                    "src": "4105:26:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4122:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 386,
                        "id": 388,
                        "nodeType": "Return",
                        "src": "4115:9:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "3422:622:1",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 390,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "4058:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4066:2:1"
                  },
                  "returnParameters": {
                    "id": 386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 385,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "4098:5:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4098:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4097:7:1"
                  },
                  "scope": 870,
                  "src": "4049:82:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1080
                  ],
                  "body": {
                    "id": 405,
                    "nodeType": "Block",
                    "src": "4252:91:1",
                    "statements": [
                      {
                        "assignments": [
                          398
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 398,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4283:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 405,
                            "src": "4262:22:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 397,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 396,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "4262:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 294,
                                "src": "4262:12:1"
                              },
                              "referencedDeclaration": 294,
                              "src": "4262:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 401,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 399,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "4287:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$294_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4287:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4262:43:1"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 402,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "4322:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4324:12:1",
                          "memberName": "_totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 289,
                          "src": "4322:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 395,
                        "id": 404,
                        "nodeType": "Return",
                        "src": "4315:21:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 391,
                    "nodeType": "StructuredDocumentation",
                    "src": "4137:49:1",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 406,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "4200:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4211:2:1"
                  },
                  "returnParameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 406,
                        "src": "4243:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4243:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4242:9:1"
                  },
                  "scope": 870,
                  "src": "4191:152:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1088
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "4475:97:1",
                    "statements": [
                      {
                        "assignments": [
                          416
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 416,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4506:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 425,
                            "src": "4485:22:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 415,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 414,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "4485:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 294,
                                "src": "4485:12:1"
                              },
                              "referencedDeclaration": 294,
                              "src": "4485:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 419,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 417,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "4510:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$294_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4510:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4485:43:1"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 420,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "4545:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 421,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4547:9:1",
                            "memberName": "_balances",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 281,
                            "src": "4545:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "id": 422,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "4557:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4545:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 413,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "4538:27:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 407,
                    "nodeType": "StructuredDocumentation",
                    "src": "4349:47:1",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "4410:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 409,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4428:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "4420:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4420:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4419:17:1"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "4466:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4466:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4465:9:1"
                  },
                  "scope": 870,
                  "src": "4401:171:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1098
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "4842:103:1",
                    "statements": [
                      {
                        "assignments": [
                          437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 437,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4860:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "4852:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4852:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 438,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "4868:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4868:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4852:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4900:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "4907:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "4911:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 441,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "4890:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4890:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4890:27:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4934:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 435,
                        "id": 448,
                        "nodeType": "Return",
                        "src": "4927:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "4578:184:1",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "4776:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4793:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4785:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4785:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4805:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4797:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4797:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4784:27:1"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4836:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4836:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4835:6:1"
                  },
                  "scope": 870,
                  "src": "4767:178:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1108
                  ],
                  "body": {
                    "id": 473,
                    "nodeType": "Block",
                    "src": "5092:106:1",
                    "statements": [
                      {
                        "assignments": [
                          462
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 462,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "5123:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 473,
                            "src": "5102:22:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 461,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 460,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "5102:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 294,
                                "src": "5102:12:1"
                              },
                              "referencedDeclaration": 294,
                              "src": "5102:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 465,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 463,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "5127:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$294_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5127:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5102:43:1"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 466,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 462,
                                "src": "5162:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                  "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5164:11:1",
                              "memberName": "_allowances",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 287,
                              "src": "5162:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 469,
                            "indexExpression": {
                              "id": 468,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "5176:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5162:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 471,
                          "indexExpression": {
                            "id": 470,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "5183:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5162:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 459,
                        "id": 472,
                        "nodeType": "Return",
                        "src": "5155:36:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4951:47:1",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 474,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "5012:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5030:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "5022:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5022:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5045:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "5037:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5037:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5021:32:1"
                  },
                  "returnParameters": {
                    "id": 459,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "5083:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5083:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5082:9:1"
                  },
                  "scope": 870,
                  "src": "5003:195:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1118
                  ],
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "5584:107:1",
                    "statements": [
                      {
                        "assignments": [
                          485
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 485,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "5602:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 497,
                            "src": "5594:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 484,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5594:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 488,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 486,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "5610:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5610:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5594:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 490,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5641:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 491,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 477,
                              "src": "5648:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 492,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "5657:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 489,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              753,
                              821
                            ],
                            "referencedDeclaration": 753,
                            "src": "5632:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5632:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 494,
                        "nodeType": "ExpressionStatement",
                        "src": "5632:31:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5680:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 483,
                        "id": 496,
                        "nodeType": "Return",
                        "src": "5673:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 475,
                    "nodeType": "StructuredDocumentation",
                    "src": "5204:296:1",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 498,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "5514:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5530:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "5522:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5522:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5547:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "5539:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5539:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5521:32:1"
                  },
                  "returnParameters": {
                    "id": 483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "5578:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 481,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5578:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5577:6:1"
                  },
                  "scope": 870,
                  "src": "5505:186:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1130
                  ],
                  "body": {
                    "id": 529,
                    "nodeType": "Block",
                    "src": "6344:151:1",
                    "statements": [
                      {
                        "assignments": [
                          511
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 511,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "6362:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 529,
                            "src": "6354:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 510,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6354:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 514,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 512,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "6372:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6372:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6354:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 516,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "6410:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 517,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "6416:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 518,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 505,
                              "src": "6425:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 515,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "6394:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6394:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 520,
                        "nodeType": "ExpressionStatement",
                        "src": "6394:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 522,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "6451:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 523,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "6457:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 524,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 505,
                              "src": "6461:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 521,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "6441:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6441:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 526,
                        "nodeType": "ExpressionStatement",
                        "src": "6441:26:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6484:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 509,
                        "id": 528,
                        "nodeType": "Return",
                        "src": "6477:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "5697:549:1",
                    "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 530,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "6260:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6281:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 530,
                        "src": "6273:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6273:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6295:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 530,
                        "src": "6287:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6287:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6307:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 530,
                        "src": "6299:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6299:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6272:41:1"
                  },
                  "returnParameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 530,
                        "src": "6338:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6338:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6337:6:1"
                  },
                  "scope": 870,
                  "src": "6251:244:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 576,
                    "nodeType": "Block",
                    "src": "6937:231:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 540,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "6951:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6967:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6959:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 541,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6959:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6959:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6951:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 554,
                        "nodeType": "IfStatement",
                        "src": "6947:86:1",
                        "trueBody": {
                          "id": 553,
                          "nodeType": "Block",
                          "src": "6971:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 549,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7019:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 548,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7011:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 547,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7011:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 550,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7011:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 546,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 933,
                                  "src": "6992:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6992:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 552,
                              "nodeType": "RevertStatement",
                              "src": "6985:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 555,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 535,
                            "src": "7046:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7060:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7052:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 556,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7052:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7052:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7046:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 569,
                        "nodeType": "IfStatement",
                        "src": "7042:86:1",
                        "trueBody": {
                          "id": 568,
                          "nodeType": "Block",
                          "src": "7064:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 564,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7114:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7106:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 562,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7106:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7106:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 561,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 938,
                                  "src": "7085:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7085:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 567,
                              "nodeType": "RevertStatement",
                              "src": "7078:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 571,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 533,
                              "src": "7145:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 572,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "7151:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 573,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "7155:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 570,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "7137:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7137:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "7137:24:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 531,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:362:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 577,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "6877:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 533,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6895:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "6887:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 532,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6887:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6909:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "6901:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6901:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 537,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6921:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "6913:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 536,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6913:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6886:41:1"
                  },
                  "returnParameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6937:0:1"
                  },
                  "scope": 870,
                  "src": "6868:300:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 668,
                    "nodeType": "Block",
                    "src": "7558:1095:1",
                    "statements": [
                      {
                        "assignments": [
                          589
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 589,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7589:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 668,
                            "src": "7568:22:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 588,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 587,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "7568:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 294,
                                "src": "7568:12:1"
                              },
                              "referencedDeclaration": 294,
                              "src": "7568:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 592,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 590,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "7593:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$294_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7593:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7568:43:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 593,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "7625:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7641:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7633:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 594,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7633:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7633:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7625:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 635,
                          "nodeType": "Block",
                          "src": "7801:366:1",
                          "statements": [
                            {
                              "assignments": [
                                607
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 607,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "7823:11:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 635,
                                  "src": "7815:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 606,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7815:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 612,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 608,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 589,
                                    "src": "7837:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                      "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                    }
                                  },
                                  "id": 609,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7839:9:1",
                                  "memberName": "_balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 281,
                                  "src": "7837:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 611,
                                "indexExpression": {
                                  "id": 610,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 580,
                                  "src": "7849:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7837:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7815:39:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 613,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 607,
                                  "src": "7872:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 614,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 584,
                                  "src": "7886:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7872:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 623,
                              "nodeType": "IfStatement",
                              "src": "7868:115:1",
                              "trueBody": {
                                "id": 622,
                                "nodeType": "Block",
                                "src": "7893:90:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 617,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 580,
                                          "src": "7943:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 618,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 607,
                                          "src": "7949:11:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 619,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 584,
                                          "src": "7962:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 616,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 928,
                                        "src": "7918:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) pure"
                                        }
                                      },
                                      "id": 620,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7918:50:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 621,
                                    "nodeType": "RevertStatement",
                                    "src": "7911:57:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 634,
                              "nodeType": "UncheckedBlock",
                              "src": "7996:161:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 632,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 624,
                                          "name": "$",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 589,
                                          "src": "8103:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                          }
                                        },
                                        "id": 627,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8105:9:1",
                                        "memberName": "_balances",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 281,
                                        "src": "8103:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 628,
                                      "indexExpression": {
                                        "id": 626,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 580,
                                        "src": "8115:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "8103:17:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 631,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 629,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 607,
                                        "src": "8123:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 630,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 584,
                                        "src": "8137:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8123:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8103:39:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 633,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8103:39:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 636,
                        "nodeType": "IfStatement",
                        "src": "7621:546:1",
                        "trueBody": {
                          "id": 605,
                          "nodeType": "Block",
                          "src": "7645:150:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 599,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 589,
                                    "src": "7761:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                      "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                    }
                                  },
                                  "id": 601,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7763:12:1",
                                  "memberName": "_totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 289,
                                  "src": "7761:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 602,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 584,
                                  "src": "7779:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7761:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 604,
                              "nodeType": "ExpressionStatement",
                              "src": "7761:23:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 637,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "8181:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8195:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8187:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 638,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8187:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8187:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8181:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "8398:208:1",
                          "statements": [
                            {
                              "id": 659,
                              "nodeType": "UncheckedBlock",
                              "src": "8412:184:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 651,
                                          "name": "$",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 589,
                                          "src": "8557:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                          }
                                        },
                                        "id": 654,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8559:9:1",
                                        "memberName": "_balances",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 281,
                                        "src": "8557:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 655,
                                      "indexExpression": {
                                        "id": 653,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 582,
                                        "src": "8569:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "8557:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 656,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 584,
                                      "src": "8576:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8557:24:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 658,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8557:24:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "8177:429:1",
                        "trueBody": {
                          "id": 650,
                          "nodeType": "Block",
                          "src": "8199:193:1",
                          "statements": [
                            {
                              "id": 649,
                              "nodeType": "UncheckedBlock",
                              "src": "8213:169:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 647,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 643,
                                        "name": "$",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 589,
                                        "src": "8344:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                          "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                        }
                                      },
                                      "id": 645,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "8346:12:1",
                                      "memberName": "_totalSupply",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 289,
                                      "src": "8344:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 646,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 584,
                                      "src": "8362:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8344:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 648,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8344:23:1"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 580,
                              "src": "8630:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 664,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "8636:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 665,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "8640:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "8621:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8621:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 667,
                        "nodeType": "EmitStatement",
                        "src": "8616:30:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 578,
                    "nodeType": "StructuredDocumentation",
                    "src": "7174:304:1",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 669,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "7492:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7508:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "7500:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7500:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7522:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "7514:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7514:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7534:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "7526:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7526:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7499:41:1"
                  },
                  "returnParameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7558:0:1"
                  },
                  "scope": 870,
                  "src": "7483:1170:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 701,
                    "nodeType": "Block",
                    "src": "9052:152:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 677,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "9066:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9085:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9077:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 678,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9077:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9077:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9066:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 691,
                        "nodeType": "IfStatement",
                        "src": "9062:91:1",
                        "trueBody": {
                          "id": 690,
                          "nodeType": "Block",
                          "src": "9089:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 686,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9139:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 685,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9131:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 684,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9131:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 687,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9131:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 683,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 938,
                                  "src": "9110:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9110:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 689,
                              "nodeType": "RevertStatement",
                              "src": "9103:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 695,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9178:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9170:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 693,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9170:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9170:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 697,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 672,
                              "src": "9182:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 698,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 674,
                              "src": "9191:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 692,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "9162:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9162:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 700,
                        "nodeType": "ExpressionStatement",
                        "src": "9162:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 670,
                    "nodeType": "StructuredDocumentation",
                    "src": "8659:332:1",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 702,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "9005:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 672,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "9019:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "9011:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 671,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9011:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9036:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "9028:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9028:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9010:32:1"
                  },
                  "returnParameters": {
                    "id": 676,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9052:0:1"
                  },
                  "scope": 870,
                  "src": "8996:208:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "9578:150:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 710,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 705,
                            "src": "9592:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9611:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9603:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 711,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9603:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9603:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9592:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 724,
                        "nodeType": "IfStatement",
                        "src": "9588:89:1",
                        "trueBody": {
                          "id": 723,
                          "nodeType": "Block",
                          "src": "9615:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 719,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9663:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 718,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9655:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 717,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9655:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 720,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9655:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 716,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 933,
                                  "src": "9636:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9636:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 722,
                              "nodeType": "RevertStatement",
                              "src": "9629:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 726,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 705,
                              "src": "9694:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9711:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9703:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 727,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9703:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9703:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 731,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "9715:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 725,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "9686:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9686:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "9686:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 703,
                    "nodeType": "StructuredDocumentation",
                    "src": "9210:307:1",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 735,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "9531:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 705,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "9545:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "9537:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 704,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9537:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 707,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9562:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "9554:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 706,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9554:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9536:32:1"
                  },
                  "returnParameters": {
                    "id": 709,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9578:0:1"
                  },
                  "scope": 870,
                  "src": "9522:206:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 752,
                    "nodeType": "Block",
                    "src": "10338:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 746,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "10357:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 747,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 740,
                              "src": "10364:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 748,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "10373:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10380:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 745,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              753,
                              821
                            ],
                            "referencedDeclaration": 821,
                            "src": "10348:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10348:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 751,
                        "nodeType": "ExpressionStatement",
                        "src": "10348:37:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 736,
                    "nodeType": "StructuredDocumentation",
                    "src": "9734:525:1",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 753,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "10273:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 743,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 738,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10290:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "10282:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10282:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10305:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "10297:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10297:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 742,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10322:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "10314:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 741,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10314:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10281:47:1"
                  },
                  "returnParameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10338:0:1"
                  },
                  "scope": 870,
                  "src": "10264:128:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 820,
                    "nodeType": "Block",
                    "src": "11322:389:1",
                    "statements": [
                      {
                        "assignments": [
                          767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 767,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "11353:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 820,
                            "src": "11332:22:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 766,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 765,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "11332:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 294,
                                "src": "11332:12:1"
                              },
                              "referencedDeclaration": 294,
                              "src": "11332:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 770,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 768,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "11357:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$294_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11357:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11332:43:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 771,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "11389:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11406:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11398:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 772,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11398:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11398:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11389:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 785,
                        "nodeType": "IfStatement",
                        "src": "11385:89:1",
                        "trueBody": {
                          "id": 784,
                          "nodeType": "Block",
                          "src": "11410:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 780,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11460:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 779,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11452:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 778,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11452:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 781,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11452:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 777,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 952,
                                  "src": "11431:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11431:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 783,
                              "nodeType": "RevertStatement",
                              "src": "11424:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 786,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "11487:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11506:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11498:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 787,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11498:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11498:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11487:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 800,
                        "nodeType": "IfStatement",
                        "src": "11483:90:1",
                        "trueBody": {
                          "id": 799,
                          "nodeType": "Block",
                          "src": "11510:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 795,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11559:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11551:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 793,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11551:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11551:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 792,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 957,
                                  "src": "11531:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11531:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 798,
                              "nodeType": "RevertStatement",
                              "src": "11524:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 801,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "11582:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Storage_$294_storage_ptr",
                                    "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                  }
                                },
                                "id": 805,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11584:11:1",
                                "memberName": "_allowances",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 287,
                                "src": "11582:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 806,
                              "indexExpression": {
                                "id": 803,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 756,
                                "src": "11596:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11582:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 807,
                            "indexExpression": {
                              "id": 804,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "11603:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11582:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 808,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "11614:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11582:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 810,
                        "nodeType": "ExpressionStatement",
                        "src": "11582:37:1"
                      },
                      {
                        "condition": {
                          "id": 811,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "11633:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 819,
                        "nodeType": "IfStatement",
                        "src": "11629:76:1",
                        "trueBody": {
                          "id": 818,
                          "nodeType": "Block",
                          "src": "11644:61:1",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 813,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 756,
                                    "src": "11672:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 814,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 758,
                                    "src": "11679:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 815,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 760,
                                    "src": "11688:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 812,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1074,
                                  "src": "11663:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11663:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 817,
                              "nodeType": "EmitStatement",
                              "src": "11658:36:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 754,
                    "nodeType": "StructuredDocumentation",
                    "src": "10398:821:1",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 821,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "11233:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 763,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 756,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "11250:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 821,
                        "src": "11242:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11242:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "11265:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 821,
                        "src": "11257:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11257:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 760,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "11282:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 821,
                        "src": "11274:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11274:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 762,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "11294:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 821,
                        "src": "11289:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 761,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11289:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11241:63:1"
                  },
                  "returnParameters": {
                    "id": 764,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11322:0:1"
                  },
                  "scope": 870,
                  "src": "11224:487:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "12082:388:1",
                    "statements": [
                      {
                        "assignments": [
                          832
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 832,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "12100:16:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 868,
                            "src": "12092:24:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 831,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12092:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 837,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 834,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "12129:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 835,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 826,
                              "src": "12136:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 833,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "12119:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12119:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12092:52:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 838,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "12158:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12183:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 840,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12183:7:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 839,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "12178:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12178:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12192:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "12178:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12158:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 867,
                        "nodeType": "IfStatement",
                        "src": "12154:310:1",
                        "trueBody": {
                          "id": 866,
                          "nodeType": "Block",
                          "src": "12197:267:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 845,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 832,
                                  "src": "12215:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 846,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 828,
                                  "src": "12234:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12215:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 855,
                              "nodeType": "IfStatement",
                              "src": "12211:130:1",
                              "trueBody": {
                                "id": 854,
                                "nodeType": "Block",
                                "src": "12241:100:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 849,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 826,
                                          "src": "12293:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 850,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 832,
                                          "src": "12302:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 851,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 828,
                                          "src": "12320:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 848,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 947,
                                        "src": "12266:26:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) pure"
                                        }
                                      },
                                      "id": 852,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12266:60:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 853,
                                    "nodeType": "RevertStatement",
                                    "src": "12259:67:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 865,
                              "nodeType": "UncheckedBlock",
                              "src": "12354:100:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 857,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 824,
                                        "src": "12391:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 858,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 826,
                                        "src": "12398:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 861,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 859,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 832,
                                          "src": "12407:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 860,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 828,
                                          "src": "12426:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12407:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 862,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12433:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 856,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        753,
                                        821
                                      ],
                                      "referencedDeclaration": 821,
                                      "src": "12382:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 863,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12382:57:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 864,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12382:57:1"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 822,
                    "nodeType": "StructuredDocumentation",
                    "src": "11717:271:1",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 869,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "12002:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "12026:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "12018:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12018:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 826,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "12041:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "12033:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 825,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12033:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 828,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "12058:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "12050:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 827,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12050:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12017:47:1"
                  },
                  "returnParameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12082:0:1"
                  },
                  "scope": 870,
                  "src": "11993:477:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 871,
              "src": "1576:10896:1",
              "usedErrors": [
                16,
                19,
                928,
                933,
                938,
                947,
                952,
                957
              ],
              "usedEvents": [
                24,
                1065,
                1074
              ]
            }
          ],
          "src": "105:12368:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              916
            ],
            "Initializable": [
              253
            ]
          },
          "id": 917,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 872,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 874,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 917,
              "sourceUnit": 254,
              "src": "126:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 873,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 253,
                    "src": "134:13:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 876,
                    "name": "Initializable",
                    "nameLocations": [
                      "728:13:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 253,
                    "src": "728:13:2"
                  },
                  "id": 877,
                  "nodeType": "InheritanceSpecifier",
                  "src": "728:13:2"
                }
              ],
              "canonicalName": "ContextUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 875,
                "nodeType": "StructuredDocumentation",
                "src": "191:496:2",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 916,
              "linearizedBaseContracts": [
                916,
                253
              ],
              "name": "ContextUpgradeable",
              "nameLocation": "706:18:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 882,
                    "nodeType": "Block",
                    "src": "800:7:2",
                    "statements": []
                  },
                  "id": 883,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 880,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 879,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "783:16:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "783:16:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "783:16:2"
                    }
                  ],
                  "name": "__Context_init",
                  "nameLocation": "757:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "771:2:2"
                  },
                  "returnParameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "800:0:2"
                  },
                  "scope": 916,
                  "src": "748:59:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 888,
                    "nodeType": "Block",
                    "src": "875:7:2",
                    "statements": []
                  },
                  "id": 889,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 886,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 885,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "858:16:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "858:16:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "858:16:2"
                    }
                  ],
                  "name": "__Context_init_unchained",
                  "nameLocation": "822:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 884,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "846:2:2"
                  },
                  "returnParameters": {
                    "id": 887,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "875:0:2"
                  },
                  "scope": 916,
                  "src": "813:69:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 897,
                    "nodeType": "Block",
                    "src": "949:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 894,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "966:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "970:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "966:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 893,
                        "id": 896,
                        "nodeType": "Return",
                        "src": "959:17:2"
                      }
                    ]
                  },
                  "id": 898,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "896:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 890,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "906:2:2"
                  },
                  "returnParameters": {
                    "id": 893,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 892,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 898,
                        "src": "940:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 891,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:9:2"
                  },
                  "scope": 916,
                  "src": "887:96:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 906,
                    "nodeType": "Block",
                    "src": "1056:32:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 903,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1073:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1077:4:2",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "1073:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 902,
                        "id": 905,
                        "nodeType": "Return",
                        "src": "1066:15:2"
                      }
                    ]
                  },
                  "id": 907,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "998:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1006:2:2"
                  },
                  "returnParameters": {
                    "id": 902,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 901,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "1040:14:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 900,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1039:16:2"
                  },
                  "scope": 916,
                  "src": "989:99:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "1166:25:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1183:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 911,
                        "id": 913,
                        "nodeType": "Return",
                        "src": "1176:8:2"
                      }
                    ]
                  },
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "1103:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 908,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1123:2:2"
                  },
                  "returnParameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "1157:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1156:9:2"
                  },
                  "scope": 916,
                  "src": "1094:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 917,
              "src": "688:505:2",
              "usedErrors": [
                16,
                19
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "101:1093:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              1053
            ],
            "IERC20Errors": [
              958
            ],
            "IERC721Errors": [
              1006
            ]
          },
          "id": 1054,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 918,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 919,
                "nodeType": "StructuredDocumentation",
                "src": "138:139:3",
                "text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
              },
              "fullyImplemented": true,
              "id": 958,
              "linearizedBaseContracts": [
                958
              ],
              "name": "IERC20Errors",
              "nameLocation": "288:12:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 920,
                    "nodeType": "StructuredDocumentation",
                    "src": "307:309:3",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 928,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "627:24:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 927,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "660:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 928,
                        "src": "652:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "676:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 928,
                        "src": "668:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "693:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 928,
                        "src": "685:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:49:3"
                  },
                  "src": "621:80:3"
                },
                {
                  "documentation": {
                    "id": 929,
                    "nodeType": "StructuredDocumentation",
                    "src": "707:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 933,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "870:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 931,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "897:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 933,
                        "src": "889:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 930,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:16:3"
                  },
                  "src": "864:41:3"
                },
                {
                  "documentation": {
                    "id": 934,
                    "nodeType": "StructuredDocumentation",
                    "src": "911:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 938,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1081:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 937,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 936,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1110:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 938,
                        "src": "1102:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 935,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1101:18:3"
                  },
                  "src": "1075:45:3"
                },
                {
                  "documentation": {
                    "id": 939,
                    "nodeType": "StructuredDocumentation",
                    "src": "1126:345:3",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 947,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1482:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 941,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1517:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 947,
                        "src": "1509:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 940,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1509:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 943,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1534:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 947,
                        "src": "1526:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1526:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1553:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 947,
                        "src": "1545:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1508:52:3"
                  },
                  "src": "1476:85:3"
                },
                {
                  "documentation": {
                    "id": 948,
                    "nodeType": "StructuredDocumentation",
                    "src": "1567:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 952,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1752:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 951,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1781:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 952,
                        "src": "1773:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:18:3"
                  },
                  "src": "1746:45:3"
                },
                {
                  "documentation": {
                    "id": 953,
                    "nodeType": "StructuredDocumentation",
                    "src": "1797:195:3",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 957,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2003:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 955,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2031:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 957,
                        "src": "2023:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2023:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2022:17:3"
                  },
                  "src": "1997:43:3"
                }
              ],
              "scope": 1054,
              "src": "278:1764:3",
              "usedErrors": [
                928,
                933,
                938,
                947,
                952,
                957
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 959,
                "nodeType": "StructuredDocumentation",
                "src": "2044:141:3",
                "text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
              },
              "fullyImplemented": true,
              "id": 1006,
              "linearizedBaseContracts": [
                1006
              ],
              "name": "IERC721Errors",
              "nameLocation": "2196:13:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 960,
                    "nodeType": "StructuredDocumentation",
                    "src": "2216:219:3",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 964,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2446:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 963,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 962,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2473:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 964,
                        "src": "2465:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 961,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2465:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2464:15:3"
                  },
                  "src": "2440:40:3"
                },
                {
                  "documentation": {
                    "id": 965,
                    "nodeType": "StructuredDocumentation",
                    "src": "2486:132:3",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 969,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2629:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 968,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 967,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2660:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 969,
                        "src": "2652:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 966,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2652:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2651:17:3"
                  },
                  "src": "2623:46:3"
                },
                {
                  "documentation": {
                    "id": 970,
                    "nodeType": "StructuredDocumentation",
                    "src": "2675:289:3",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 978,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2975:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 977,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 972,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3004:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "2996:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 971,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2996:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 974,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3020:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "3012:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 973,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 976,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3037:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "3029:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 975,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3029:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2995:48:3"
                  },
                  "src": "2969:75:3"
                },
                {
                  "documentation": {
                    "id": 979,
                    "nodeType": "StructuredDocumentation",
                    "src": "3050:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 983,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3213:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 981,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3241:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 983,
                        "src": "3233:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 980,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3233:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3232:16:3"
                  },
                  "src": "3207:42:3"
                },
                {
                  "documentation": {
                    "id": 984,
                    "nodeType": "StructuredDocumentation",
                    "src": "3255:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 988,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3425:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 987,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3455:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 988,
                        "src": "3447:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3447:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3446:18:3"
                  },
                  "src": "3419:46:3"
                },
                {
                  "documentation": {
                    "id": 989,
                    "nodeType": "StructuredDocumentation",
                    "src": "3471:247:3",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 995,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3729:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 994,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 991,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3764:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "3756:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 990,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3756:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 993,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3782:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "3774:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 992,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3755:35:3"
                  },
                  "src": "3723:68:3"
                },
                {
                  "documentation": {
                    "id": 996,
                    "nodeType": "StructuredDocumentation",
                    "src": "3797:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 1000,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3982:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 998,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4012:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "4004:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 997,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4004:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4003:18:3"
                  },
                  "src": "3976:46:3"
                },
                {
                  "documentation": {
                    "id": 1001,
                    "nodeType": "StructuredDocumentation",
                    "src": "4028:197:3",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 1005,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4236:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4266:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1005,
                        "src": "4258:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4258:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4257:18:3"
                  },
                  "src": "4230:46:3"
                }
              ],
              "scope": 1054,
              "src": "2186:2092:3",
              "usedErrors": [
                964,
                969,
                978,
                983,
                988,
                995,
                1000,
                1005
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1007,
                "nodeType": "StructuredDocumentation",
                "src": "4280:143:3",
                "text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
              },
              "fullyImplemented": true,
              "id": 1053,
              "linearizedBaseContracts": [
                1053
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4434:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1008,
                    "nodeType": "StructuredDocumentation",
                    "src": "4455:361:3",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 1018,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4827:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1017,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4862:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "4854:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4854:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1012,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4878:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "4870:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1011,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4870:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1014,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4895:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "4887:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1013,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4887:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1016,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4911:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "4903:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4903:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4853:66:3"
                  },
                  "src": "4821:99:3"
                },
                {
                  "documentation": {
                    "id": 1019,
                    "nodeType": "StructuredDocumentation",
                    "src": "4926:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 1023,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5089:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5118:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1023,
                        "src": "5110:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5110:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5109:16:3"
                  },
                  "src": "5083:43:3"
                },
                {
                  "documentation": {
                    "id": 1024,
                    "nodeType": "StructuredDocumentation",
                    "src": "5132:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 1028,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5302:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1027,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1026,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5333:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "5325:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5325:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5324:18:3"
                  },
                  "src": "5296:47:3"
                },
                {
                  "documentation": {
                    "id": 1029,
                    "nodeType": "StructuredDocumentation",
                    "src": "5349:256:3",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 1035,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5616:28:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1031,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5653:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "5645:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5645:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5671:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "5663:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5663:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5644:33:3"
                  },
                  "src": "5610:68:3"
                },
                {
                  "documentation": {
                    "id": 1036,
                    "nodeType": "StructuredDocumentation",
                    "src": "5684:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 1040,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5869:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1038,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5900:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1040,
                        "src": "5892:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5892:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5891:18:3"
                  },
                  "src": "5863:47:3"
                },
                {
                  "documentation": {
                    "id": 1041,
                    "nodeType": "StructuredDocumentation",
                    "src": "5916:197:3",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 1045,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6124:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6155:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1045,
                        "src": "6147:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6147:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6146:18:3"
                  },
                  "src": "6118:47:3"
                },
                {
                  "documentation": {
                    "id": 1046,
                    "nodeType": "StructuredDocumentation",
                    "src": "6171:280:3",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 1052,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6462:25:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1048,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6496:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "6488:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6488:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1050,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6515:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "6507:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1049,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6507:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6487:41:3"
                  },
                  "src": "6456:73:3"
                }
              ],
              "scope": 1054,
              "src": "4424:2107:3",
              "usedErrors": [
                1018,
                1023,
                1028,
                1035,
                1040,
                1045,
                1052
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6420:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1131
            ]
          },
          "id": 1132,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1055,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1056,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:4",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1131,
              "linearizedBaseContracts": [
                1131
              ],
              "name": "IERC20",
              "nameLocation": "213:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1057,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1065,
                  "name": "Transfer",
                  "nameLocation": "395:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1059,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "404:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1061,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "426:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1063,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "446:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:4"
                  },
                  "src": "389:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1066,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1074,
                  "name": "Approval",
                  "nameLocation": "626:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1073,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1074,
                        "src": "635:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1074,
                        "src": "658:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1072,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1074,
                        "src": "683:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1071,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:4"
                  },
                  "src": "620:78:4"
                },
                {
                  "documentation": {
                    "id": 1075,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1080,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:4"
                  },
                  "returnParameters": {
                    "id": 1079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1080,
                        "src": "820:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:4"
                  },
                  "scope": 1131,
                  "src": "774:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1081,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1088,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "930:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:4"
                  },
                  "returnParameters": {
                    "id": 1087,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1086,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "970:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:4"
                  },
                  "scope": 1131,
                  "src": "911:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1089,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1098,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "1221:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "1233:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:4"
                  },
                  "returnParameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1096,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "1266:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:4"
                  },
                  "scope": 1131,
                  "src": "1203:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1099,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1108,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "1566:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "1581:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:4"
                  },
                  "returnParameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "1621:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:4"
                  },
                  "scope": 1131,
                  "src": "1547:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1109,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1118,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1111,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "2325:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1113,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "2342:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1112,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:4"
                  },
                  "returnParameters": {
                    "id": 1117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "2375:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:4"
                  },
                  "scope": 1131,
                  "src": "2308:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1119,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1130,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "2711:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1123,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "2725:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1125,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "2737:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1124,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:4"
                  },
                  "returnParameters": {
                    "id": 1129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "2770:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:4"
                  },
                  "scope": 1131,
                  "src": "2689:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1132,
              "src": "203:2575:4",
              "usedErrors": [],
              "usedEvents": [
                1065,
                1074
              ]
            }
          ],
          "src": "106:2673:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1131
            ],
            "IERC20Metadata": [
              1157
            ]
          },
          "id": 1158,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1133,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1135,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1158,
              "sourceUnit": 1132,
              "src": "151:37:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1134,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1131,
                    "src": "159:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1137,
                    "name": "IERC20",
                    "nameLocations": [
                      "305:6:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1131,
                    "src": "305:6:5"
                  },
                  "id": 1138,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:5"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1136,
                "nodeType": "StructuredDocumentation",
                "src": "190:86:5",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard."
              },
              "fullyImplemented": false,
              "id": 1157,
              "linearizedBaseContracts": [
                1157,
                1131
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1139,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:5",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1144,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:5"
                  },
                  "returnParameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1144,
                        "src": "416:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:5"
                  },
                  "scope": 1157,
                  "src": "377:54:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1145,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:5",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1150,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:5"
                  },
                  "returnParameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "539:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:5"
                  },
                  "scope": 1157,
                  "src": "498:56:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1151,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:5",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1156,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:5"
                  },
                  "returnParameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1156,
                        "src": "673:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:5"
                  },
                  "scope": 1157,
                  "src": "630:50:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1158,
              "src": "277:405:5",
              "usedErrors": [],
              "usedEvents": [
                1065,
                1074
              ]
            }
          ],
          "src": "125:558:5"
        },
        "id": 5
      },
      "contracts/test/ERC20TestToken2.sol": {
        "ast": {
          "absolutePath": "contracts/test/ERC20TestToken2.sol",
          "exportedSymbols": {
            "ERC20TestToken2": [
              1228
            ],
            "ERC20Upgradeable": [
              870
            ]
          },
          "id": 1229,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1159,
              "literals": [
                "solidity",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
              "id": 1161,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1229,
              "sourceUnit": 871,
              "src": "57:102:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1160,
                    "name": "ERC20Upgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 870,
                    "src": "65:16:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1162,
                    "name": "ERC20Upgradeable",
                    "nameLocations": [
                      "189:16:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 870,
                    "src": "189:16:6"
                  },
                  "id": 1163,
                  "nodeType": "InheritanceSpecifier",
                  "src": "189:16:6"
                }
              ],
              "canonicalName": "ERC20TestToken2",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1228,
              "linearizedBaseContracts": [
                1228,
                870,
                958,
                1157,
                1131,
                916,
                253
              ],
              "name": "ERC20TestToken2",
              "nameLocation": "170:15:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1165,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "226:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1228,
                  "src": "212:23:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1172,
                    "nodeType": "Block",
                    "src": "309:39:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1169,
                            "name": "_disableInitializers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "319:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "319:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "319:22:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1166,
                    "nodeType": "StructuredDocumentation",
                    "src": "242:48:6",
                    "text": "@custom:oz-upgrades-unsafe-allow constructor"
                  },
                  "id": 1173,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "306:2:6"
                  },
                  "returnParameters": {
                    "id": 1168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "309:0:6"
                  },
                  "scope": 1228,
                  "src": "295:53:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1204,
                    "nodeType": "Block",
                    "src": "412:161:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4552433230205465737420546f6b656e",
                              "id": 1181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "435:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1aee7f8a65b9a1f4d96d0d3d514092ee3089b6cf8d55eddcc61c059c3b5503a",
                                "typeString": "literal_string \"ERC20 Test Token\""
                              },
                              "value": "ERC20 Test Token"
                            },
                            {
                              "hexValue": "455454",
                              "id": 1182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "455:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d6ded35e647611d0b863c86181c0f2f2f8b3dfe6c065587eafd2529fa86cfd1",
                                "typeString": "literal_string \"ETT\""
                              },
                              "value": "ETT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a1aee7f8a65b9a1f4d96d0d3d514092ee3089b6cf8d55eddcc61c059c3b5503a",
                                "typeString": "literal_string \"ERC20 Test Token\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5d6ded35e647611d0b863c86181c0f2f2f8b3dfe6c065587eafd2529fa86cfd1",
                                "typeString": "literal_string \"ETT\""
                              }
                            ],
                            "id": 1180,
                            "name": "__ERC20_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "422:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "422:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1184,
                        "nodeType": "ExpressionStatement",
                        "src": "422:39:6"
                      },
                      {
                        "expression": {
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1185,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1165,
                            "src": "471:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1188,
                                "name": "decimals_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1175,
                                "src": "489:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "483:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 1186,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "483:5:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "483:16:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "471:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1191,
                        "nodeType": "ExpressionStatement",
                        "src": "471:28:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1193,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "515:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "519:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "515:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000_by_1",
                                  "typeString": "int_const 1000000000"
                                },
                                "id": 1197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "527:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "39",
                                  "id": 1196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "533:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9_by_1",
                                    "typeString": "int_const 9"
                                  },
                                  "value": "9"
                                },
                                "src": "527:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000_by_1",
                                  "typeString": "int_const 1000000000"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "537:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "id": 1199,
                                  "name": "decimals_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1175,
                                  "src": "543:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "537:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "527:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1192,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "509:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "509:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1203,
                        "nodeType": "ExpressionStatement",
                        "src": "509:44:6"
                      }
                    ]
                  },
                  "functionSelector": "fe4b84df",
                  "id": 1205,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1178,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1177,
                        "name": "initializer",
                        "nameLocations": [
                          "400:11:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 107,
                        "src": "400:11:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "400:11:6"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "363:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1175,
                        "mutability": "mutable",
                        "name": "decimals_",
                        "nameLocation": "382:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1205,
                        "src": "374:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "373:19:6"
                  },
                  "returnParameters": {
                    "id": 1179,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "412:0:6"
                  },
                  "scope": 1228,
                  "src": "354:219:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    390
                  ],
                  "body": {
                    "id": 1213,
                    "nodeType": "Block",
                    "src": "636:33:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1211,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1165,
                          "src": "653:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1210,
                        "id": 1212,
                        "nodeType": "Return",
                        "src": "646:16:6"
                      }
                    ]
                  },
                  "functionSelector": "313ce567",
                  "id": 1214,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "588:8:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1207,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "611:8:6"
                  },
                  "parameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "596:2:6"
                  },
                  "returnParameters": {
                    "id": 1210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1214,
                        "src": "629:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1208,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "629:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "628:7:6"
                  },
                  "scope": 1228,
                  "src": "579:90:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1226,
                    "nodeType": "Block",
                    "src": "731:39:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1222,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1216,
                              "src": "747:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1223,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "756:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1221,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "741:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "741:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1225,
                        "nodeType": "ExpressionStatement",
                        "src": "741:22:6"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1227,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "684:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "697:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "689:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "689:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "714:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "706:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "706:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "688:33:6"
                  },
                  "returnParameters": {
                    "id": 1220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "731:0:6"
                  },
                  "scope": 1228,
                  "src": "675:95:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1229,
              "src": "161:611:6",
              "usedErrors": [
                16,
                19,
                928,
                933,
                938,
                947,
                952,
                957
              ],
              "usedEvents": [
                24,
                1065,
                1074
              ]
            }
          ],
          "src": "32:741:6"
        },
        "id": 6
      }
    },
    "contracts": {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "Initializable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "devdoc": {
            "custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
            "details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
            "errors": {
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ]
            },
            "events": {
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              }
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "ERC20Upgradeable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
            "errors": {
              "ERC20InsufficientAllowance(address,uint256,uint256)": [
                {
                  "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
                  "params": {
                    "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC20InsufficientBalance(address,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC20InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSpender(address)": [
                {
                  "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
                  "params": {
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ]
            },
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "See {IERC20-allowance}."
              },
              "approve(address,uint256)": {
                "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
              },
              "balanceOf(address)": {
                "details": "See {IERC20-balanceOf}."
              },
              "decimals()": {
                "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "symbol()": {
                "details": "Returns the symbol of the token, usually a shorter version of the name."
              },
              "totalSupply()": {
                "details": "See {IERC20-totalSupply}."
              },
              "transfer(address,uint256)": {
                "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
              },
              "transferFrom(address,address,uint256)": {
                "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ContextUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "devdoc": {
            "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
            "errors": {
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ]
            },
            "events": {
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              }
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "devdoc": {
            "details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
            "errors": {
              "ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred.",
                    "tokenId": "Identifier number of a token."
                  }
                }
              ],
              "ERC1155InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC1155InvalidArrayLength(uint256,uint256)": [
                {
                  "details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
                  "params": {
                    "idsLength": "Length of the array of token identifiers",
                    "valuesLength": "Length of the array of token amounts"
                  }
                }
              ],
              "ERC1155InvalidOperator(address)": [
                {
                  "details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
                  "params": {
                    "operator": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC1155InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC1155InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC1155MissingApprovalForAll(address,address)": [
                {
                  "details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
                  "params": {
                    "operator": "Address that may be allowed to operate on tokens without being their owner.",
                    "owner": "Address of the current owner of a token."
                  }
                }
              ]
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "devdoc": {
            "details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
            "errors": {
              "ERC20InsufficientAllowance(address,uint256,uint256)": [
                {
                  "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
                  "params": {
                    "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC20InsufficientBalance(address,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC20InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSpender(address)": [
                {
                  "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
                  "params": {
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ]
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "devdoc": {
            "details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
            "errors": {
              "ERC721IncorrectOwner(address,uint256,address)": [
                {
                  "details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
                  "params": {
                    "owner": "Address of the current owner of a token.",
                    "sender": "Address whose tokens are being transferred.",
                    "tokenId": "Identifier number of a token."
                  }
                }
              ],
              "ERC721InsufficientApproval(address,uint256)": [
                {
                  "details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
                  "params": {
                    "operator": "Address that may be allowed to operate on tokens without being their owner.",
                    "tokenId": "Identifier number of a token."
                  }
                }
              ],
              "ERC721InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC721InvalidOperator(address)": [
                {
                  "details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
                  "params": {
                    "operator": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC721InvalidOwner(address)": [
                {
                  "details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
                  "params": {
                    "owner": "Address of the current owner of a token."
                  }
                }
              ],
              "ERC721InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC721InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC721NonexistentToken(uint256)": [
                {
                  "details": "Indicates a `tokenId` whose `owner` is the zero address.",
                  "params": {
                    "tokenId": "Identifier number of a token."
                  }
                }
              ]
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the value of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the value of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface for the optional metadata functions from the ERC20 standard.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the value of tokens owned by `account`."
              },
              "decimals()": {
                "details": "Returns the decimals places of the token."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "symbol()": {
                "details": "Returns the symbol of the token."
              },
              "totalSupply()": {
                "details": "Returns the value of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/test/ERC20TestToken2.sol": {
        "ERC20TestToken2": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "decimals_",
                  "type": "uint256"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "errors": {
              "ERC20InsufficientAllowance(address,uint256,uint256)": [
                {
                  "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
                  "params": {
                    "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC20InsufficientBalance(address,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC20InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSpender(address)": [
                {
                  "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
                  "params": {
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ]
            },
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "See {IERC20-allowance}."
              },
              "approve(address,uint256)": {
                "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
              },
              "balanceOf(address)": {
                "details": "See {IERC20-balanceOf}."
              },
              "constructor": {
                "custom:oz-upgrades-unsafe-allow": "constructor"
              },
              "decimals()": {
                "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "symbol()": {
                "details": "Returns the symbol of the token, usually a shorter version of the name."
              },
              "totalSupply()": {
                "details": "See {IERC20-totalSupply}."
              },
              "transfer(address,uint256)": {
                "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
              },
              "transferFrom(address,address,uint256)": {
                "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1173": {
                  "entryPoint": null,
                  "id": 1173,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_disableInitializers_221": {
                  "entryPoint": 30,
                  "id": 221,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_getInitializableStorage_252": {
                  "entryPoint": null,
                  "id": 252,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:216:7",
                    "nodeType": "YulBlock",
                    "src": "0:216:7",
                    "statements": [
                      {
                        "nativeSrc": "6:3:7",
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "113:101:7",
                          "nodeType": "YulBlock",
                          "src": "113:101:7",
                          "statements": [
                            {
                              "nativeSrc": "123:26:7",
                              "nodeType": "YulAssignment",
                              "src": "123:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "135:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "135:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "146:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "146:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "131:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "131:3:7"
                                },
                                "nativeSrc": "131:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "131:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "123:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "123:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "165:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "165:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "180:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "180:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "196:2:7",
                                                "nodeType": "YulLiteral",
                                                "src": "196:2:7",
                                                "type": "",
                                                "value": "64"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "200:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "200:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "192:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "192:3:7"
                                            },
                                            "nativeSrc": "192:10:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "192:10:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "204:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "204:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "188:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "188:3:7"
                                        },
                                        "nativeSrc": "188:18:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "188:18:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "176:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "176:3:7"
                                    },
                                    "nativeSrc": "176:31:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "176:31:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "158:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "158:6:7"
                                },
                                "nativeSrc": "158:50:7",
                                "nodeType": "YulFunctionCall",
                                "src": "158:50:7"
                              },
                              "nativeSrc": "158:50:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "158:50:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
                        "nativeSrc": "14:200:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "82:9:7",
                            "nodeType": "YulTypedName",
                            "src": "82:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "93:6:7",
                            "nodeType": "YulTypedName",
                            "src": "93:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "104:4:7",
                            "nodeType": "YulTypedName",
                            "src": "104:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14:200:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b610d02806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461014857806370a082311461015d57806395d89b4114610193578063a9059cbb1461019b578063dd62ed3e146101ae578063fe4b84df146101c157600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610120578063313ce56714610133575b600080fd5b6100b66101d4565b6040516100c391906108e5565b60405180910390f35b6100df6100da366004610950565b610297565b60405190151581526020016100c3565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016100c3565b6100df61012e36600461097a565b6102b1565b60005460405160ff90911681526020016100c3565b61015b610156366004610950565b6102d5565b005b61011261016b3660046109b6565b6001600160a01b03166000908152600080516020610cad833981519152602052604090205490565b6100b66102e3565b6100df6101a9366004610950565b610322565b6101126101bc3660046109d8565b610330565b61015b6101cf366004610a0b565b61037a565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace038054606091600080516020610cad8339815191529161021390610a24565b80601f016020809104026020016040519081016040528092919081815260200182805461023f90610a24565b801561028c5780601f106102615761010080835404028352916020019161028c565b820191906000526020600020905b81548152906001019060200180831161026f57829003601f168201915b505050505091505090565b6000336102a58185856104ff565b60019150505b92915050565b6000336102bf858285610511565b6102ca85858561057c565b506001949350505050565b6102df82826105db565b5050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020610cad8339815191529161021390610a24565b6000336102a581858561057c565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156103c05750825b905060008267ffffffffffffffff1660011480156103dd5750303b155b9050811580156103eb575080155b156104095760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561043357845460ff60401b1916600160401b1785555b6104806040518060400160405280601081526020016f22a9219918102a32b9ba102a37b5b2b760811b8152506040518060400160405280600381526020016211551560ea1b815250610611565b6000805460ff191660ff88161790556104b13361049e88600a610b58565b6104ac90633b9aca00610b64565b6105db565b83156104f757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b61050c8383836001610623565b505050565b600061051d8484610330565b90506000198114610576578181101561056757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61057684848484036000610623565b50505050565b6001600160a01b0383166105a657604051634b637e8f60e11b81526000600482015260240161055e565b6001600160a01b0382166105d05760405163ec442f0560e01b81526000600482015260240161055e565b61050c83838361070b565b6001600160a01b0382166106055760405163ec442f0560e01b81526000600482015260240161055e565b6102df6000838361070b565b610619610849565b6102df8282610894565b600080516020610cad8339815191526001600160a01b03851661065c5760405163e602df0560e01b81526000600482015260240161055e565b6001600160a01b03841661068657604051634a1406b160e11b81526000600482015260240161055e565b6001600160a01b0380861660009081526001830160209081526040808320938816835292905220839055811561070457836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516106fb91815260200190565b60405180910390a35b5050505050565b600080516020610cad8339815191526001600160a01b038416610747578181600201600082825461073c9190610b7b565b909155506107b99050565b6001600160a01b0384166000908152602082905260409020548281101561079a5760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161055e565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b0383166107d75760028101805483900390556107f6565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083b91815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661089257604051631afcd79f60e31b815260040160405180910390fd5b565b61089c610849565b600080516020610cad8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036108d68482610bec565b50600481016105768382610bec565b60006020808352835180602085015260005b81811015610913578581018301518582016040015282016108f7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461094b57600080fd5b919050565b6000806040838503121561096357600080fd5b61096c83610934565b946020939093013593505050565b60008060006060848603121561098f57600080fd5b61099884610934565b92506109a660208501610934565b9150604084013590509250925092565b6000602082840312156109c857600080fd5b6109d182610934565b9392505050565b600080604083850312156109eb57600080fd5b6109f483610934565b9150610a0260208401610934565b90509250929050565b600060208284031215610a1d57600080fd5b5035919050565b600181811c90821680610a3857607f821691505b602082108103610a5857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610aaf578160001904821115610a9557610a95610a5e565b80851615610aa257918102915b93841c9390800290610a79565b509250929050565b600082610ac6575060016102ab565b81610ad3575060006102ab565b8160018114610ae95760028114610af357610b0f565b60019150506102ab565b60ff841115610b0457610b04610a5e565b50506001821b6102ab565b5060208310610133831016604e8410600b8410161715610b32575081810a6102ab565b610b3c8383610a74565b8060001904821115610b5057610b50610a5e565b029392505050565b60006109d18383610ab7565b80820281158282048414176102ab576102ab610a5e565b808201808211156102ab576102ab610a5e565b634e487b7160e01b600052604160045260246000fd5b601f82111561050c576000816000526020600020601f850160051c81016020861015610bcd5750805b601f850160051c820191505b818110156104f757828155600101610bd9565b815167ffffffffffffffff811115610c0657610c06610b8e565b610c1a81610c148454610a24565b84610ba4565b602080601f831160018114610c4f5760008415610c375750858301515b600019600386901b1c1916600185901b1785556104f7565b600085815260208120601f198616915b82811015610c7e57888601518255948401946001909101908401610c5f565b5085821015610c9c5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a26469706673582212206acf830dee3e8257986602a15b33b9666dfa0a882eeab6443943c924fc6e166964736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19 PUSH2 0x1E JUMP JUMPDEST PUSH2 0xD0 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xCD JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0xD02 DUP1 PUSH2 0xDF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x112 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x213 SWAP1 PUSH2 0xA24 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23F SWAP1 PUSH2 0xA24 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x261 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A5 DUP2 DUP6 DUP6 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BF DUP6 DUP3 DUP6 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x2CA DUP6 DUP6 DUP6 PUSH2 0x57C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DF DUP3 DUP3 PUSH2 0x5DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x213 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A5 DUP2 DUP6 DUP6 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x3C0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x3DD JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3EB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x433 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x480 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x22A9219918102A32B9BA102A37B5B2B7 PUSH1 0x81 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x115515 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x611 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP9 AND OR SWAP1 SSTORE PUSH2 0x4B1 CALLER PUSH2 0x49E DUP9 PUSH1 0xA PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x4AC SWAP1 PUSH4 0x3B9ACA00 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST DUP4 ISZERO PUSH2 0x4F7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x50C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x623 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D DUP5 DUP5 PUSH2 0x330 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x576 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x576 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x623 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x50C DUP4 DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x2DF PUSH1 0x0 DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x619 PUSH2 0x849 JUMP JUMPDEST PUSH2 0x2DF DUP3 DUP3 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x704 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x747 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x73C SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x7B9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7D7 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x83B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x89C PUSH2 0x849 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x8D6 DUP5 DUP3 PUSH2 0xBEC JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x576 DUP4 DUP3 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x913 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8F7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96C DUP4 PUSH2 0x934 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x998 DUP5 PUSH2 0x934 JUMP JUMPDEST SWAP3 POP PUSH2 0x9A6 PUSH1 0x20 DUP6 ADD PUSH2 0x934 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D1 DUP3 PUSH2 0x934 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F4 DUP4 PUSH2 0x934 JUMP JUMPDEST SWAP2 POP PUSH2 0xA02 PUSH1 0x20 DUP5 ADD PUSH2 0x934 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xAAF JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xA95 JUMPI PUSH2 0xA95 PUSH2 0xA5E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xAA2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xA79 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAC6 JUMPI POP PUSH1 0x1 PUSH2 0x2AB JUMP JUMPDEST DUP2 PUSH2 0xAD3 JUMPI POP PUSH1 0x0 PUSH2 0x2AB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xAE9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xAF3 JUMPI PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2AB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB04 JUMPI PUSH2 0xB04 PUSH2 0xA5E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2AB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB32 JUMPI POP DUP2 DUP2 EXP PUSH2 0x2AB JUMP JUMPDEST PUSH2 0xB3C DUP4 DUP4 PUSH2 0xA74 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xB50 JUMPI PUSH2 0xB50 PUSH2 0xA5E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP4 DUP4 PUSH2 0xAB7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2AB JUMPI PUSH2 0x2AB PUSH2 0xA5E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2AB PUSH2 0xA5E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xBCD JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4F7 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBD9 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC06 JUMPI PUSH2 0xC06 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xC14 DUP5 SLOAD PUSH2 0xA24 JUMP JUMPDEST DUP5 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC4F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xC37 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC7E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xC5F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xC9C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00A264697066 PUSH20 0x582212206ACF830DEE3E8257986602A15B33B966 PUSH14 0xFA0A882EEAB6443943C924FC6E16 PUSH10 0x64736F6C634300081800 CALLER ",
              "sourceMap": "161:611:6:-:0;;;295:53;;;;;;;;;-1:-1:-1;319:22:6;:20;:22::i;:::-;161:611;;7711:422:0;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:0;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:0;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:0;-1:-1:-1;;;;;8035:33:0;;;;;8087:29;;158:50:7;;;8087:29:0;;146:2:7;131:18;8087:29:0;;;;;;;7981:146;7760:373;7711:422::o;14:200:7:-;161:611:6;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@__ERC20_init_321": {
                  "entryPoint": 1553,
                  "id": 321,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@__ERC20_init_unchained_349": {
                  "entryPoint": 2196,
                  "id": 349,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_approve_753": {
                  "entryPoint": 1279,
                  "id": 753,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_approve_821": {
                  "entryPoint": 1571,
                  "id": 821,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_checkInitializing_175": {
                  "entryPoint": 2121,
                  "id": 175,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_getERC20Storage_305": {
                  "entryPoint": null,
                  "id": 305,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_getInitializableStorage_252": {
                  "entryPoint": null,
                  "id": 252,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_isInitializing_243": {
                  "entryPoint": null,
                  "id": 243,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_mint_702": {
                  "entryPoint": 1499,
                  "id": 702,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_898": {
                  "entryPoint": null,
                  "id": 898,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_spendAllowance_869": {
                  "entryPoint": 1297,
                  "id": 869,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transfer_577": {
                  "entryPoint": 1404,
                  "id": 577,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_669": {
                  "entryPoint": 1803,
                  "id": 669,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@allowance_474": {
                  "entryPoint": 816,
                  "id": 474,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_498": {
                  "entryPoint": 663,
                  "id": 498,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_426": {
                  "entryPoint": null,
                  "id": 426,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@decimals_1214": {
                  "entryPoint": null,
                  "id": 1214,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@initialize_1205": {
                  "entryPoint": 890,
                  "id": 1205,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@mint_1227": {
                  "entryPoint": 725,
                  "id": 1227,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@name_365": {
                  "entryPoint": 468,
                  "id": 365,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@symbol_381": {
                  "entryPoint": 739,
                  "id": 381,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalSupply_406": {
                  "entryPoint": null,
                  "id": 406,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_530": {
                  "entryPoint": 689,
                  "id": 530,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transfer_450": {
                  "entryPoint": 802,
                  "id": 450,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address": {
                  "entryPoint": 2356,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 2486,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 2520,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 2426,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 2384,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 2571,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2277,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 2939,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 2676,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint256": {
                  "entryPoint": 2904,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 2743,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 2916,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 2980,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 3052,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 2596,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 2654,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2958,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:7825:7",
                    "nodeType": "YulBlock",
                    "src": "0:7825:7",
                    "statements": [
                      {
                        "nativeSrc": "6:3:7",
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "135:427:7",
                          "nodeType": "YulBlock",
                          "src": "135:427:7",
                          "statements": [
                            {
                              "nativeSrc": "145:12:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "145:12:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "155:2:7",
                                "nodeType": "YulLiteral",
                                "src": "155:2:7",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "149:2:7",
                                  "nodeType": "YulTypedName",
                                  "src": "149:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "173:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "173:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "184:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "184:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "166:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "166:6:7"
                                },
                                "nativeSrc": "166:21:7",
                                "nodeType": "YulFunctionCall",
                                "src": "166:21:7"
                              },
                              "nativeSrc": "166:21:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "166:21:7"
                            },
                            {
                              "nativeSrc": "196:27:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "196:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "216:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "216:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "210:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "210:5:7"
                                },
                                "nativeSrc": "210:13:7",
                                "nodeType": "YulFunctionCall",
                                "src": "210:13:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "200:6:7",
                                  "nodeType": "YulTypedName",
                                  "src": "200:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "243:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "243:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "254:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "254:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "239:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:7"
                                    },
                                    "nativeSrc": "239:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:18:7"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "259:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "259:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "232:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "232:6:7"
                                },
                                "nativeSrc": "232:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "232:34:7"
                              },
                              "nativeSrc": "232:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "232:34:7"
                            },
                            {
                              "nativeSrc": "275:10:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "275:10:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "284:1:7",
                                "nodeType": "YulLiteral",
                                "src": "284:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "279:1:7",
                                  "nodeType": "YulTypedName",
                                  "src": "279:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "344:90:7",
                                "nodeType": "YulBlock",
                                "src": "344:90:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nativeSrc": "373:9:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "373:9:7"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "384:1:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "384:1:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "369:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "369:3:7"
                                              },
                                              "nativeSrc": "369:17:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "369:17:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "388:2:7",
                                              "nodeType": "YulLiteral",
                                              "src": "388:2:7",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "365:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "365:3:7"
                                          },
                                          "nativeSrc": "365:26:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "365:26:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nativeSrc": "407:6:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "407:6:7"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "415:1:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "415:1:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "403:3:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "403:3:7"
                                                  },
                                                  "nativeSrc": "403:14:7",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "403:14:7"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nativeSrc": "419:2:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "419:2:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "399:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "399:3:7"
                                              },
                                              "nativeSrc": "399:23:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "399:23:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "393:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "393:5:7"
                                          },
                                          "nativeSrc": "393:30:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "393:30:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "358:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:6:7"
                                      },
                                      "nativeSrc": "358:66:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:66:7"
                                    },
                                    "nativeSrc": "358:66:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "358:66:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "305:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "305:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "308:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "302:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:2:7"
                                },
                                "nativeSrc": "302:13:7",
                                "nodeType": "YulFunctionCall",
                                "src": "302:13:7"
                              },
                              "nativeSrc": "294:140:7",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "316:19:7",
                                "nodeType": "YulBlock",
                                "src": "316:19:7",
                                "statements": [
                                  {
                                    "nativeSrc": "318:15:7",
                                    "nodeType": "YulAssignment",
                                    "src": "318:15:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "327:1:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:1:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "330:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "330:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "323:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "323:3:7"
                                      },
                                      "nativeSrc": "323:10:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "323:10:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "318:1:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "298:3:7",
                                "nodeType": "YulBlock",
                                "src": "298:3:7",
                                "statements": []
                              },
                              "src": "294:140:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "458:9:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "458:9:7"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "469:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "469:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "454:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "454:3:7"
                                        },
                                        "nativeSrc": "454:22:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "454:22:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "478:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "478:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "450:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "450:3:7"
                                    },
                                    "nativeSrc": "450:31:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "450:31:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "483:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "483:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "443:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "443:6:7"
                                },
                                "nativeSrc": "443:42:7",
                                "nodeType": "YulFunctionCall",
                                "src": "443:42:7"
                              },
                              "nativeSrc": "443:42:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "443:42:7"
                            },
                            {
                              "nativeSrc": "494:62:7",
                              "nodeType": "YulAssignment",
                              "src": "494:62:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "510:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "510:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nativeSrc": "529:6:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "529:6:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "537:2:7",
                                                "nodeType": "YulLiteral",
                                                "src": "537:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "525:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "525:3:7"
                                            },
                                            "nativeSrc": "525:15:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "525:15:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "546:2:7",
                                                "nodeType": "YulLiteral",
                                                "src": "546:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "542:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "542:3:7"
                                            },
                                            "nativeSrc": "542:7:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "542:7:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "521:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "521:3:7"
                                        },
                                        "nativeSrc": "521:29:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "521:29:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "506:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "506:3:7"
                                    },
                                    "nativeSrc": "506:45:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "506:45:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "553:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "553:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "502:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "502:3:7"
                                },
                                "nativeSrc": "502:54:7",
                                "nodeType": "YulFunctionCall",
                                "src": "502:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "494:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "494:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "14:548:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "104:9:7",
                            "nodeType": "YulTypedName",
                            "src": "104:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "115:6:7",
                            "nodeType": "YulTypedName",
                            "src": "115:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "126:4:7",
                            "nodeType": "YulTypedName",
                            "src": "126:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14:548:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "616:124:7",
                          "nodeType": "YulBlock",
                          "src": "616:124:7",
                          "statements": [
                            {
                              "nativeSrc": "626:29:7",
                              "nodeType": "YulAssignment",
                              "src": "626:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "648:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "648:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "635:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "635:12:7"
                                },
                                "nativeSrc": "635:20:7",
                                "nodeType": "YulFunctionCall",
                                "src": "635:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "626:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "626:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "718:16:7",
                                "nodeType": "YulBlock",
                                "src": "718:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "727:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "727:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "730:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "730:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "720:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "720:6:7"
                                      },
                                      "nativeSrc": "720:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "720:12:7"
                                    },
                                    "nativeSrc": "720:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "720:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "677:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "677:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "688:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "688:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "703:3:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "703:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "708:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "708:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "699:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "699:3:7"
                                                },
                                                "nativeSrc": "699:11:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "699:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "712:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "712:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "695:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "695:3:7"
                                            },
                                            "nativeSrc": "695:19:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "695:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "684:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "684:3:7"
                                        },
                                        "nativeSrc": "684:31:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "684:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "674:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "674:2:7"
                                    },
                                    "nativeSrc": "674:42:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "674:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "667:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "667:6:7"
                                },
                                "nativeSrc": "667:50:7",
                                "nodeType": "YulFunctionCall",
                                "src": "667:50:7"
                              },
                              "nativeSrc": "664:70:7",
                              "nodeType": "YulIf",
                              "src": "664:70:7"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nativeSrc": "567:173:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "595:6:7",
                            "nodeType": "YulTypedName",
                            "src": "595:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "606:5:7",
                            "nodeType": "YulTypedName",
                            "src": "606:5:7",
                            "type": ""
                          }
                        ],
                        "src": "567:173:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "832:167:7",
                          "nodeType": "YulBlock",
                          "src": "832:167:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "878:16:7",
                                "nodeType": "YulBlock",
                                "src": "878:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "887:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "887:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "890:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "890:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "880:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "880:6:7"
                                      },
                                      "nativeSrc": "880:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "880:12:7"
                                    },
                                    "nativeSrc": "880:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "880:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "853:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "853:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "862:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "862:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "849:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "849:3:7"
                                    },
                                    "nativeSrc": "849:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "849:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "874:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "874:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "845:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "845:3:7"
                                },
                                "nativeSrc": "845:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "845:32:7"
                              },
                              "nativeSrc": "842:52:7",
                              "nodeType": "YulIf",
                              "src": "842:52:7"
                            },
                            {
                              "nativeSrc": "903:39:7",
                              "nodeType": "YulAssignment",
                              "src": "903:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "932:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "932:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "913:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "913:18:7"
                                },
                                "nativeSrc": "913:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "913:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "903:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "903:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "951:42:7",
                              "nodeType": "YulAssignment",
                              "src": "951:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "978:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "978:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "989:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "989:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "974:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "974:3:7"
                                    },
                                    "nativeSrc": "974:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "974:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "961:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "961:12:7"
                                },
                                "nativeSrc": "961:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "961:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "951:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "951:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nativeSrc": "745:254:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "790:9:7",
                            "nodeType": "YulTypedName",
                            "src": "790:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "801:7:7",
                            "nodeType": "YulTypedName",
                            "src": "801:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "813:6:7",
                            "nodeType": "YulTypedName",
                            "src": "813:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "821:6:7",
                            "nodeType": "YulTypedName",
                            "src": "821:6:7",
                            "type": ""
                          }
                        ],
                        "src": "745:254:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1099:92:7",
                          "nodeType": "YulBlock",
                          "src": "1099:92:7",
                          "statements": [
                            {
                              "nativeSrc": "1109:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1109:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1121:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1121:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1132:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1132:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1117:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1117:3:7"
                                },
                                "nativeSrc": "1117:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1117:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1109:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1109:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1151:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1151:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "1176:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "1176:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "1169:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1169:6:7"
                                        },
                                        "nativeSrc": "1169:14:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1169:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "1162:6:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1162:6:7"
                                    },
                                    "nativeSrc": "1162:22:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1162:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1144:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1144:6:7"
                                },
                                "nativeSrc": "1144:41:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1144:41:7"
                              },
                              "nativeSrc": "1144:41:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1144:41:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "1004:187:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1068:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1068:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1079:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1079:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1090:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1090:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1004:187:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1297:76:7",
                          "nodeType": "YulBlock",
                          "src": "1297:76:7",
                          "statements": [
                            {
                              "nativeSrc": "1307:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1307:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1319:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1319:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1330:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1330:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1315:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1315:3:7"
                                },
                                "nativeSrc": "1315:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1315:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1307:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1349:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1349:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1360:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1360:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1342:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1342:6:7"
                                },
                                "nativeSrc": "1342:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1342:25:7"
                              },
                              "nativeSrc": "1342:25:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1342:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "1196:177:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1266:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1266:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1277:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1277:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1288:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1288:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1196:177:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1482:224:7",
                          "nodeType": "YulBlock",
                          "src": "1482:224:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1528:16:7",
                                "nodeType": "YulBlock",
                                "src": "1528:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1537:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "1537:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1540:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "1540:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1530:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1530:6:7"
                                      },
                                      "nativeSrc": "1530:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1530:12:7"
                                    },
                                    "nativeSrc": "1530:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1530:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1503:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1503:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1512:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1512:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1499:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1499:3:7"
                                    },
                                    "nativeSrc": "1499:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1499:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1524:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1524:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1495:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1495:3:7"
                                },
                                "nativeSrc": "1495:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1495:32:7"
                              },
                              "nativeSrc": "1492:52:7",
                              "nodeType": "YulIf",
                              "src": "1492:52:7"
                            },
                            {
                              "nativeSrc": "1553:39:7",
                              "nodeType": "YulAssignment",
                              "src": "1553:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1582:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1582:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1563:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1563:18:7"
                                },
                                "nativeSrc": "1563:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1563:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1553:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1553:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1601:48:7",
                              "nodeType": "YulAssignment",
                              "src": "1601:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1634:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1634:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1645:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1645:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1630:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1630:3:7"
                                    },
                                    "nativeSrc": "1630:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1630:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1611:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:18:7"
                                },
                                "nativeSrc": "1611:38:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1611:38:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1601:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1601:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1658:42:7",
                              "nodeType": "YulAssignment",
                              "src": "1658:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1685:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1685:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1696:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1696:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1681:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1681:3:7"
                                    },
                                    "nativeSrc": "1681:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1681:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1668:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1668:12:7"
                                },
                                "nativeSrc": "1668:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1668:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1658:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nativeSrc": "1378:328:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1432:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1432:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1443:7:7",
                            "nodeType": "YulTypedName",
                            "src": "1443:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1455:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1455:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1463:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1463:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1471:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1471:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1378:328:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1808:87:7",
                          "nodeType": "YulBlock",
                          "src": "1808:87:7",
                          "statements": [
                            {
                              "nativeSrc": "1818:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1818:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1830:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1830:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1841:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1841:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1826:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1826:3:7"
                                },
                                "nativeSrc": "1826:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1826:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1818:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1818:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1860:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1860:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1875:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1875:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1883:4:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1883:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1871:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1871:3:7"
                                    },
                                    "nativeSrc": "1871:17:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1871:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1853:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1853:6:7"
                                },
                                "nativeSrc": "1853:36:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1853:36:7"
                              },
                              "nativeSrc": "1853:36:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1853:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "1711:184:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1777:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1777:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1788:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1788:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1799:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1799:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1711:184:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1970:116:7",
                          "nodeType": "YulBlock",
                          "src": "1970:116:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2016:16:7",
                                "nodeType": "YulBlock",
                                "src": "2016:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2025:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2025:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2028:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2028:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2018:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2018:6:7"
                                      },
                                      "nativeSrc": "2018:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2018:12:7"
                                    },
                                    "nativeSrc": "2018:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2018:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1991:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1991:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2000:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2000:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1987:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1987:3:7"
                                    },
                                    "nativeSrc": "1987:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1987:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2012:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2012:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1983:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1983:3:7"
                                },
                                "nativeSrc": "1983:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1983:32:7"
                              },
                              "nativeSrc": "1980:52:7",
                              "nodeType": "YulIf",
                              "src": "1980:52:7"
                            },
                            {
                              "nativeSrc": "2041:39:7",
                              "nodeType": "YulAssignment",
                              "src": "2041:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2070:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2070:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2051:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2051:18:7"
                                },
                                "nativeSrc": "2051:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2051:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2041:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2041:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "1900:186:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1936:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1936:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1947:7:7",
                            "nodeType": "YulTypedName",
                            "src": "1947:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1959:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1959:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1900:186:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2178:173:7",
                          "nodeType": "YulBlock",
                          "src": "2178:173:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2224:16:7",
                                "nodeType": "YulBlock",
                                "src": "2224:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2233:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2233:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2236:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2236:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2226:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2226:6:7"
                                      },
                                      "nativeSrc": "2226:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2226:12:7"
                                    },
                                    "nativeSrc": "2226:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2226:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2199:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2199:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2208:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2208:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2195:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2195:3:7"
                                    },
                                    "nativeSrc": "2195:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2195:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2220:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2220:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2191:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2191:3:7"
                                },
                                "nativeSrc": "2191:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2191:32:7"
                              },
                              "nativeSrc": "2188:52:7",
                              "nodeType": "YulIf",
                              "src": "2188:52:7"
                            },
                            {
                              "nativeSrc": "2249:39:7",
                              "nodeType": "YulAssignment",
                              "src": "2249:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2278:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2278:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2259:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2259:18:7"
                                },
                                "nativeSrc": "2259:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2259:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2249:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2249:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2297:48:7",
                              "nodeType": "YulAssignment",
                              "src": "2297:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2330:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2330:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2341:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2341:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2326:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2326:3:7"
                                    },
                                    "nativeSrc": "2326:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2326:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2307:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2307:18:7"
                                },
                                "nativeSrc": "2307:38:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2307:38:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2297:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2297:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nativeSrc": "2091:260:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2136:9:7",
                            "nodeType": "YulTypedName",
                            "src": "2136:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2147:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2147:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2159:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2159:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "2167:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2167:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2091:260:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2426:110:7",
                          "nodeType": "YulBlock",
                          "src": "2426:110:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2472:16:7",
                                "nodeType": "YulBlock",
                                "src": "2472:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2481:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2481:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2484:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2484:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2474:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2474:6:7"
                                      },
                                      "nativeSrc": "2474:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2474:12:7"
                                    },
                                    "nativeSrc": "2474:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2474:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2447:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2447:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2456:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2456:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2443:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2443:3:7"
                                    },
                                    "nativeSrc": "2443:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2443:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2468:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2468:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2439:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2439:3:7"
                                },
                                "nativeSrc": "2439:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2439:32:7"
                              },
                              "nativeSrc": "2436:52:7",
                              "nodeType": "YulIf",
                              "src": "2436:52:7"
                            },
                            {
                              "nativeSrc": "2497:33:7",
                              "nodeType": "YulAssignment",
                              "src": "2497:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2520:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2520:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2507:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2507:12:7"
                                },
                                "nativeSrc": "2507:23:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2507:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2497:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2497:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "2356:180:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2392:9:7",
                            "nodeType": "YulTypedName",
                            "src": "2392:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2403:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2403:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2415:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2415:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2356:180:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2596:325:7",
                          "nodeType": "YulBlock",
                          "src": "2596:325:7",
                          "statements": [
                            {
                              "nativeSrc": "2606:22:7",
                              "nodeType": "YulAssignment",
                              "src": "2606:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2620:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2620:1:7",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "2623:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2623:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "2616:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2616:3:7"
                                },
                                "nativeSrc": "2616:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2616:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "2606:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2606:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2637:38:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2637:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "2667:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2667:4:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2673:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2673:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "2663:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2663:3:7"
                                },
                                "nativeSrc": "2663:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2663:12:7"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "2641:18:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2641:18:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2714:31:7",
                                "nodeType": "YulBlock",
                                "src": "2714:31:7",
                                "statements": [
                                  {
                                    "nativeSrc": "2716:27:7",
                                    "nodeType": "YulAssignment",
                                    "src": "2716:27:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "2730:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2730:6:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2738:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2738:4:7",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "2726:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2726:3:7"
                                      },
                                      "nativeSrc": "2726:17:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2726:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "2716:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2716:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "2694:18:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2694:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2687:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2687:6:7"
                                },
                                "nativeSrc": "2687:26:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2687:26:7"
                              },
                              "nativeSrc": "2684:61:7",
                              "nodeType": "YulIf",
                              "src": "2684:61:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "2804:111:7",
                                "nodeType": "YulBlock",
                                "src": "2804:111:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2825:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2825:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2832:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "2832:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2837:10:7",
                                              "nodeType": "YulLiteral",
                                              "src": "2837:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "2828:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2828:3:7"
                                          },
                                          "nativeSrc": "2828:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2828:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2818:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2818:6:7"
                                      },
                                      "nativeSrc": "2818:31:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2818:31:7"
                                    },
                                    "nativeSrc": "2818:31:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2818:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2869:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2869:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2872:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2872:4:7",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2862:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2862:6:7"
                                      },
                                      "nativeSrc": "2862:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2862:15:7"
                                    },
                                    "nativeSrc": "2862:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2862:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2897:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2897:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2900:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2900:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2890:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2890:6:7"
                                      },
                                      "nativeSrc": "2890:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2890:15:7"
                                    },
                                    "nativeSrc": "2890:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2890:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "2760:18:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2760:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "2783:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2783:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2791:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2791:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "2780:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2780:2:7"
                                    },
                                    "nativeSrc": "2780:14:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2780:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "2757:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2757:2:7"
                                },
                                "nativeSrc": "2757:38:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2757:38:7"
                              },
                              "nativeSrc": "2754:161:7",
                              "nodeType": "YulIf",
                              "src": "2754:161:7"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "2541:380:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "2576:4:7",
                            "nodeType": "YulTypedName",
                            "src": "2576:4:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "2585:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2585:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2541:380:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2958:95:7",
                          "nodeType": "YulBlock",
                          "src": "2958:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2975:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2975:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2982:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2982:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2987:10:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2987:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "2978:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2978:3:7"
                                    },
                                    "nativeSrc": "2978:20:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2978:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2968:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2968:6:7"
                                },
                                "nativeSrc": "2968:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2968:31:7"
                              },
                              "nativeSrc": "2968:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2968:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3015:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3015:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3018:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3018:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3008:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3008:6:7"
                                },
                                "nativeSrc": "3008:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3008:15:7"
                              },
                              "nativeSrc": "3008:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3008:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3039:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3039:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3042:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3042:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "3032:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3032:6:7"
                                },
                                "nativeSrc": "3032:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3032:15:7"
                              },
                              "nativeSrc": "3032:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3032:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "2926:127:7",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2926:127:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3122:352:7",
                          "nodeType": "YulBlock",
                          "src": "3122:352:7",
                          "statements": [
                            {
                              "nativeSrc": "3132:16:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3132:16:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3147:1:7",
                                "nodeType": "YulLiteral",
                                "src": "3147:1:7",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "3136:7:7",
                                  "nodeType": "YulTypedName",
                                  "src": "3136:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3157:10:7",
                              "nodeType": "YulAssignment",
                              "src": "3157:10:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3166:1:7",
                                "nodeType": "YulLiteral",
                                "src": "3166:1:7",
                                "type": "",
                                "value": "1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "3157:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3157:5:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3176:13:7",
                              "nodeType": "YulAssignment",
                              "src": "3176:13:7",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "3184:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "3184:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "3176:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3176:4:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3240:228:7",
                                "nodeType": "YulBlock",
                                "src": "3240:228:7",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "3285:22:7",
                                      "nodeType": "YulBlock",
                                      "src": "3285:22:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "3287:16:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3287:16:7"
                                            },
                                            "nativeSrc": "3287:18:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3287:18:7"
                                          },
                                          "nativeSrc": "3287:18:7",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3287:18:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3260:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3260:4:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "3274:1:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3274:1:7",
                                                  "type": "",
                                                  "value": "0"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "3270:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "3270:3:7"
                                              },
                                              "nativeSrc": "3270:6:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3270:6:7"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "3278:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3278:4:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "3266:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3266:3:7"
                                          },
                                          "nativeSrc": "3266:17:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3266:17:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "3257:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3257:2:7"
                                      },
                                      "nativeSrc": "3257:27:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3257:27:7"
                                    },
                                    "nativeSrc": "3254:53:7",
                                    "nodeType": "YulIf",
                                    "src": "3254:53:7"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "3346:29:7",
                                      "nodeType": "YulBlock",
                                      "src": "3346:29:7",
                                      "statements": [
                                        {
                                          "nativeSrc": "3348:25:7",
                                          "nodeType": "YulAssignment",
                                          "src": "3348:25:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "3361:5:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "3361:5:7"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "3368:4:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "3368:4:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "3357:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3357:3:7"
                                            },
                                            "nativeSrc": "3357:16:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3357:16:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "3348:5:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3348:5:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3327:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3327:8:7"
                                        },
                                        {
                                          "name": "power_1",
                                          "nativeSrc": "3337:7:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3337:7:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "3323:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3323:3:7"
                                      },
                                      "nativeSrc": "3323:22:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3323:22:7"
                                    },
                                    "nativeSrc": "3320:55:7",
                                    "nodeType": "YulIf",
                                    "src": "3320:55:7"
                                  },
                                  {
                                    "nativeSrc": "3388:23:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3388:23:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3400:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3400:4:7"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "3406:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3406:4:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "3396:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3396:3:7"
                                      },
                                      "nativeSrc": "3396:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3396:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "3388:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3388:4:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3424:34:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3424:34:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nativeSrc": "3440:7:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3440:7:7"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3449:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3449:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "3436:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3436:3:7"
                                      },
                                      "nativeSrc": "3436:22:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3436:22:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "3424:8:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3424:8:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3209:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3209:8:7"
                                  },
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "3219:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3219:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3206:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3206:2:7"
                                },
                                "nativeSrc": "3206:21:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3206:21:7"
                              },
                              "nativeSrc": "3198:270:7",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "3228:3:7",
                                "nodeType": "YulBlock",
                                "src": "3228:3:7",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "3202:3:7",
                                "nodeType": "YulBlock",
                                "src": "3202:3:7",
                                "statements": []
                              },
                              "src": "3198:270:7"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "3058:416:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nativeSrc": "3086:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3086:5:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3093:8:7",
                            "nodeType": "YulTypedName",
                            "src": "3093:8:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3106:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3106:5:7",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "3113:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3113:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3058:416:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3538:747:7",
                          "nodeType": "YulBlock",
                          "src": "3538:747:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3576:52:7",
                                "nodeType": "YulBlock",
                                "src": "3576:52:7",
                                "statements": [
                                  {
                                    "nativeSrc": "3590:10:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3590:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3599:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "3599:1:7",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3590:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3590:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3613:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "3613:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3558:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3558:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3551:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3551:6:7"
                                },
                                "nativeSrc": "3551:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3551:16:7"
                              },
                              "nativeSrc": "3548:80:7",
                              "nodeType": "YulIf",
                              "src": "3548:80:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "3661:52:7",
                                "nodeType": "YulBlock",
                                "src": "3661:52:7",
                                "statements": [
                                  {
                                    "nativeSrc": "3675:10:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3675:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3684:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "3684:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3675:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3675:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3698:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "3698:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "3647:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3647:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3640:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3640:6:7"
                                },
                                "nativeSrc": "3640:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3640:12:7"
                              },
                              "nativeSrc": "3637:76:7",
                              "nodeType": "YulIf",
                              "src": "3637:76:7"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "3749:52:7",
                                    "nodeType": "YulBlock",
                                    "src": "3749:52:7",
                                    "statements": [
                                      {
                                        "nativeSrc": "3763:10:7",
                                        "nodeType": "YulAssignment",
                                        "src": "3763:10:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3772:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3772:1:7",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "3763:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3763:5:7"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3786:5:7",
                                        "nodeType": "YulLeave",
                                        "src": "3786:5:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3742:59:7",
                                  "nodeType": "YulCase",
                                  "src": "3742:59:7",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3747:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3747:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "3817:123:7",
                                    "nodeType": "YulBlock",
                                    "src": "3817:123:7",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "3852:22:7",
                                          "nodeType": "YulBlock",
                                          "src": "3852:22:7",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "3854:16:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3854:16:7"
                                                },
                                                "nativeSrc": "3854:18:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3854:18:7"
                                              },
                                              "nativeSrc": "3854:18:7",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3854:18:7"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "3837:8:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3837:8:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3847:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "3847:3:7",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "3834:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3834:2:7"
                                          },
                                          "nativeSrc": "3834:17:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3834:17:7"
                                        },
                                        "nativeSrc": "3831:43:7",
                                        "nodeType": "YulIf",
                                        "src": "3831:43:7"
                                      },
                                      {
                                        "nativeSrc": "3887:25:7",
                                        "nodeType": "YulAssignment",
                                        "src": "3887:25:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "3900:8:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3900:8:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3910:1:7",
                                              "nodeType": "YulLiteral",
                                              "src": "3910:1:7",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "3896:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3896:3:7"
                                          },
                                          "nativeSrc": "3896:16:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3896:16:7"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "3887:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3887:5:7"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3925:5:7",
                                        "nodeType": "YulLeave",
                                        "src": "3925:5:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3810:130:7",
                                  "nodeType": "YulCase",
                                  "src": "3810:130:7",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3815:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3815:1:7",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "3729:4:7",
                                "nodeType": "YulIdentifier",
                                "src": "3729:4:7"
                              },
                              "nativeSrc": "3722:218:7",
                              "nodeType": "YulSwitch",
                              "src": "3722:218:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "4038:70:7",
                                "nodeType": "YulBlock",
                                "src": "4038:70:7",
                                "statements": [
                                  {
                                    "nativeSrc": "4052:28:7",
                                    "nodeType": "YulAssignment",
                                    "src": "4052:28:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "4065:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4065:4:7"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "4071:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4071:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "4061:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4061:3:7"
                                      },
                                      "nativeSrc": "4061:19:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4061:19:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "4052:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4052:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4093:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "4093:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "3962:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3962:4:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3968:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "3968:2:7",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3959:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3959:2:7"
                                        },
                                        "nativeSrc": "3959:12:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3959:12:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "3976:8:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3976:8:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3986:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "3986:2:7",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3973:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3973:2:7"
                                        },
                                        "nativeSrc": "3973:16:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3973:16:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3955:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3955:3:7"
                                    },
                                    "nativeSrc": "3955:35:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3955:35:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "3999:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3999:4:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4005:3:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4005:3:7",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3996:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3996:2:7"
                                        },
                                        "nativeSrc": "3996:13:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3996:13:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "4014:8:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4014:8:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4024:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4024:2:7",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4011:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4011:2:7"
                                        },
                                        "nativeSrc": "4011:16:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4011:16:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3992:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3992:3:7"
                                    },
                                    "nativeSrc": "3992:36:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3992:36:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "3952:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3952:2:7"
                                },
                                "nativeSrc": "3952:77:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3952:77:7"
                              },
                              "nativeSrc": "3949:159:7",
                              "nodeType": "YulIf",
                              "src": "3949:159:7"
                            },
                            {
                              "nativeSrc": "4117:57:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4117:57:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4159:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4159:4:7"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "4165:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4165:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "4140:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4140:18:7"
                                },
                                "nativeSrc": "4140:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4140:34:7"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "4121:7:7",
                                  "nodeType": "YulTypedName",
                                  "src": "4121:7:7",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nativeSrc": "4130:6:7",
                                  "nodeType": "YulTypedName",
                                  "src": "4130:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4219:22:7",
                                "nodeType": "YulBlock",
                                "src": "4219:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4221:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4221:16:7"
                                      },
                                      "nativeSrc": "4221:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4221:18:7"
                                    },
                                    "nativeSrc": "4221:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4221:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4189:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4189:7:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4206:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4206:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "4202:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4202:3:7"
                                        },
                                        "nativeSrc": "4202:6:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4202:6:7"
                                      },
                                      {
                                        "name": "base_1",
                                        "nativeSrc": "4210:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4210:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "4198:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4198:3:7"
                                    },
                                    "nativeSrc": "4198:19:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4198:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4186:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4186:2:7"
                                },
                                "nativeSrc": "4186:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4186:32:7"
                              },
                              "nativeSrc": "4183:58:7",
                              "nodeType": "YulIf",
                              "src": "4183:58:7"
                            },
                            {
                              "nativeSrc": "4250:29:7",
                              "nodeType": "YulAssignment",
                              "src": "4250:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4263:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4263:7:7"
                                  },
                                  {
                                    "name": "base_1",
                                    "nativeSrc": "4272:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4272:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4259:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4259:3:7"
                                },
                                "nativeSrc": "4259:20:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4259:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4250:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4250:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "3479:806:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "3509:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3509:4:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3515:8:7",
                            "nodeType": "YulTypedName",
                            "src": "3515:8:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3528:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3528:5:7",
                            "type": ""
                          }
                        ],
                        "src": "3479:806:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4360:61:7",
                          "nodeType": "YulBlock",
                          "src": "4360:61:7",
                          "statements": [
                            {
                              "nativeSrc": "4370:45:7",
                              "nodeType": "YulAssignment",
                              "src": "4370:45:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4400:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4400:4:7"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "4406:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4406:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "4379:20:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4379:20:7"
                                },
                                "nativeSrc": "4379:36:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4379:36:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4370:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4370:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nativeSrc": "4290:131:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "4331:4:7",
                            "nodeType": "YulTypedName",
                            "src": "4331:4:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "4337:8:7",
                            "nodeType": "YulTypedName",
                            "src": "4337:8:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "4350:5:7",
                            "nodeType": "YulTypedName",
                            "src": "4350:5:7",
                            "type": ""
                          }
                        ],
                        "src": "4290:131:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4478:116:7",
                          "nodeType": "YulBlock",
                          "src": "4478:116:7",
                          "statements": [
                            {
                              "nativeSrc": "4488:20:7",
                              "nodeType": "YulAssignment",
                              "src": "4488:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4503:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4503:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4506:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4506:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4499:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4499:3:7"
                                },
                                "nativeSrc": "4499:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4499:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "4488:7:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4488:7:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4566:22:7",
                                "nodeType": "YulBlock",
                                "src": "4566:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4568:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4568:16:7"
                                      },
                                      "nativeSrc": "4568:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4568:18:7"
                                    },
                                    "nativeSrc": "4568:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4568:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "4537:1:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4537:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "4530:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4530:6:7"
                                        },
                                        "nativeSrc": "4530:9:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4530:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "4544:1:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4544:1:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "4551:7:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "4551:7:7"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "4560:1:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "4560:1:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "4547:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "4547:3:7"
                                            },
                                            "nativeSrc": "4547:15:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4547:15:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "4541:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4541:2:7"
                                        },
                                        "nativeSrc": "4541:22:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4541:22:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "4527:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4527:2:7"
                                    },
                                    "nativeSrc": "4527:37:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4527:37:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4520:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4520:6:7"
                                },
                                "nativeSrc": "4520:45:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4520:45:7"
                              },
                              "nativeSrc": "4517:71:7",
                              "nodeType": "YulIf",
                              "src": "4517:71:7"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "4426:168:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4457:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4457:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4460:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4460:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "4466:7:7",
                            "nodeType": "YulTypedName",
                            "src": "4466:7:7",
                            "type": ""
                          }
                        ],
                        "src": "4426:168:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4707:101:7",
                          "nodeType": "YulBlock",
                          "src": "4707:101:7",
                          "statements": [
                            {
                              "nativeSrc": "4717:26:7",
                              "nodeType": "YulAssignment",
                              "src": "4717:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4729:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4729:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4740:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "4740:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4725:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4725:3:7"
                                },
                                "nativeSrc": "4725:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4725:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4717:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4717:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4759:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4759:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4774:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4774:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4782:18:7",
                                        "nodeType": "YulLiteral",
                                        "src": "4782:18:7",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4770:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4770:3:7"
                                    },
                                    "nativeSrc": "4770:31:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4770:31:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4752:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4752:6:7"
                                },
                                "nativeSrc": "4752:50:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4752:50:7"
                              },
                              "nativeSrc": "4752:50:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "4752:50:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
                        "nativeSrc": "4599:209:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4676:9:7",
                            "nodeType": "YulTypedName",
                            "src": "4676:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4687:6:7",
                            "nodeType": "YulTypedName",
                            "src": "4687:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4698:4:7",
                            "nodeType": "YulTypedName",
                            "src": "4698:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4599:209:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4970:188:7",
                          "nodeType": "YulBlock",
                          "src": "4970:188:7",
                          "statements": [
                            {
                              "nativeSrc": "4980:26:7",
                              "nodeType": "YulAssignment",
                              "src": "4980:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4992:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4992:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5003:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5003:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4988:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4988:3:7"
                                },
                                "nativeSrc": "4988:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4988:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4980:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4980:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5022:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5022:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5037:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5037:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5053:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "5053:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5058:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "5058:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5049:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "5049:3:7"
                                            },
                                            "nativeSrc": "5049:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5049:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5062:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "5062:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5045:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "5045:3:7"
                                        },
                                        "nativeSrc": "5045:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5045:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5033:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5033:3:7"
                                    },
                                    "nativeSrc": "5033:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5033:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5015:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5015:6:7"
                                },
                                "nativeSrc": "5015:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5015:51:7"
                              },
                              "nativeSrc": "5015:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5015:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5086:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5086:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5097:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "5097:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5082:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5082:3:7"
                                    },
                                    "nativeSrc": "5082:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5082:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5102:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5102:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5075:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5075:6:7"
                                },
                                "nativeSrc": "5075:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5075:34:7"
                              },
                              "nativeSrc": "5075:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5075:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5129:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5129:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5140:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "5140:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5125:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5125:3:7"
                                    },
                                    "nativeSrc": "5125:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5125:18:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5145:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5145:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5118:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5118:6:7"
                                },
                                "nativeSrc": "5118:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5118:34:7"
                              },
                              "nativeSrc": "5118:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5118:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "4813:345:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4923:9:7",
                            "nodeType": "YulTypedName",
                            "src": "4923:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "4934:6:7",
                            "nodeType": "YulTypedName",
                            "src": "4934:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "4942:6:7",
                            "nodeType": "YulTypedName",
                            "src": "4942:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4950:6:7",
                            "nodeType": "YulTypedName",
                            "src": "4950:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4961:4:7",
                            "nodeType": "YulTypedName",
                            "src": "4961:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4813:345:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5264:102:7",
                          "nodeType": "YulBlock",
                          "src": "5264:102:7",
                          "statements": [
                            {
                              "nativeSrc": "5274:26:7",
                              "nodeType": "YulAssignment",
                              "src": "5274:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5286:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5286:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5297:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5297:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5282:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5282:3:7"
                                },
                                "nativeSrc": "5282:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5282:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5274:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5274:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5316:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5316:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5331:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5331:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5347:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "5347:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5352:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "5352:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5343:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "5343:3:7"
                                            },
                                            "nativeSrc": "5343:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5343:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5356:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "5356:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5339:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "5339:3:7"
                                        },
                                        "nativeSrc": "5339:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5339:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5327:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5327:3:7"
                                    },
                                    "nativeSrc": "5327:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5327:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5309:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5309:6:7"
                                },
                                "nativeSrc": "5309:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5309:51:7"
                              },
                              "nativeSrc": "5309:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5309:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "5163:203:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5233:9:7",
                            "nodeType": "YulTypedName",
                            "src": "5233:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5244:6:7",
                            "nodeType": "YulTypedName",
                            "src": "5244:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5255:4:7",
                            "nodeType": "YulTypedName",
                            "src": "5255:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5163:203:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5419:77:7",
                          "nodeType": "YulBlock",
                          "src": "5419:77:7",
                          "statements": [
                            {
                              "nativeSrc": "5429:16:7",
                              "nodeType": "YulAssignment",
                              "src": "5429:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5440:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5440:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5443:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5443:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5436:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5436:3:7"
                                },
                                "nativeSrc": "5436:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5436:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "5429:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5429:3:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5468:22:7",
                                "nodeType": "YulBlock",
                                "src": "5468:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "5470:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5470:16:7"
                                      },
                                      "nativeSrc": "5470:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5470:18:7"
                                    },
                                    "nativeSrc": "5470:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5470:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5460:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5460:1:7"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "5463:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5463:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "5457:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5457:2:7"
                                },
                                "nativeSrc": "5457:10:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5457:10:7"
                              },
                              "nativeSrc": "5454:36:7",
                              "nodeType": "YulIf",
                              "src": "5454:36:7"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "5371:125:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "5402:1:7",
                            "nodeType": "YulTypedName",
                            "src": "5402:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "5405:1:7",
                            "nodeType": "YulTypedName",
                            "src": "5405:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "5411:3:7",
                            "nodeType": "YulTypedName",
                            "src": "5411:3:7",
                            "type": ""
                          }
                        ],
                        "src": "5371:125:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5533:95:7",
                          "nodeType": "YulBlock",
                          "src": "5533:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5550:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5550:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5557:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "5557:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5562:10:7",
                                        "nodeType": "YulLiteral",
                                        "src": "5562:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "5553:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5553:3:7"
                                    },
                                    "nativeSrc": "5553:20:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5553:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5543:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5543:6:7"
                                },
                                "nativeSrc": "5543:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5543:31:7"
                              },
                              "nativeSrc": "5543:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5543:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5590:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5590:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5593:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5593:4:7",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5583:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5583:6:7"
                                },
                                "nativeSrc": "5583:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5583:15:7"
                              },
                              "nativeSrc": "5583:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5583:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5614:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5614:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5617:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5617:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "5607:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5607:6:7"
                                },
                                "nativeSrc": "5607:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5607:15:7"
                              },
                              "nativeSrc": "5607:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5607:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "5501:127:7",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5501:127:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5689:65:7",
                          "nodeType": "YulBlock",
                          "src": "5689:65:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5706:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5706:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "5709:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5709:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5699:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5699:6:7"
                                },
                                "nativeSrc": "5699:14:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5699:14:7"
                              },
                              "nativeSrc": "5699:14:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5699:14:7"
                            },
                            {
                              "nativeSrc": "5722:26:7",
                              "nodeType": "YulAssignment",
                              "src": "5722:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5740:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5740:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5743:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5743:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "5730:9:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5730:9:7"
                                },
                                "nativeSrc": "5730:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5730:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "5722:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5722:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "5633:121:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "5672:3:7",
                            "nodeType": "YulTypedName",
                            "src": "5672:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "5680:4:7",
                            "nodeType": "YulTypedName",
                            "src": "5680:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5633:121:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5840:462:7",
                          "nodeType": "YulBlock",
                          "src": "5840:462:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "5873:423:7",
                                "nodeType": "YulBlock",
                                "src": "5873:423:7",
                                "statements": [
                                  {
                                    "nativeSrc": "5887:11:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5887:11:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "5897:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "5897:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "5891:2:7",
                                        "nodeType": "YulTypedName",
                                        "src": "5891:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5918:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "5918:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "5921:5:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "5921:5:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5911:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5911:6:7"
                                      },
                                      "nativeSrc": "5911:16:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5911:16:7"
                                    },
                                    "nativeSrc": "5911:16:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5911:16:7"
                                  },
                                  {
                                    "nativeSrc": "5940:30:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5940:30:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5962:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "5962:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5965:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "5965:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "5952:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5952:9:7"
                                      },
                                      "nativeSrc": "5952:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5952:18:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "5944:4:7",
                                        "nodeType": "YulTypedName",
                                        "src": "5944:4:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "5983:57:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5983:57:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "6006:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "6006:4:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6016:1:7",
                                              "nodeType": "YulLiteral",
                                              "src": "6016:1:7",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "6023:10:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6023:10:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "6035:2:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "6035:2:7",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "6019:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "6019:3:7"
                                              },
                                              "nativeSrc": "6019:19:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "6019:19:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "6012:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "6012:3:7"
                                          },
                                          "nativeSrc": "6012:27:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6012:27:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "6002:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "6002:3:7"
                                      },
                                      "nativeSrc": "6002:38:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6002:38:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "5987:11:7",
                                        "nodeType": "YulTypedName",
                                        "src": "5987:11:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "6077:23:7",
                                      "nodeType": "YulBlock",
                                      "src": "6077:23:7",
                                      "statements": [
                                        {
                                          "nativeSrc": "6079:19:7",
                                          "nodeType": "YulAssignment",
                                          "src": "6079:19:7",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "6094:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "6094:4:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "6079:11:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "6079:11:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "6059:10:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "6059:10:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6071:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "6071:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "6056:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "6056:2:7"
                                      },
                                      "nativeSrc": "6056:20:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6056:20:7"
                                    },
                                    "nativeSrc": "6053:47:7",
                                    "nodeType": "YulIf",
                                    "src": "6053:47:7"
                                  },
                                  {
                                    "nativeSrc": "6113:41:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6113:41:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "6127:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "6127:4:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6137:1:7",
                                              "nodeType": "YulLiteral",
                                              "src": "6137:1:7",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "6144:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6144:3:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "6149:2:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "6149:2:7",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "6140:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "6140:3:7"
                                              },
                                              "nativeSrc": "6140:12:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "6140:12:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "6133:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "6133:3:7"
                                          },
                                          "nativeSrc": "6133:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6133:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "6123:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "6123:3:7"
                                      },
                                      "nativeSrc": "6123:31:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6123:31:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "6117:2:7",
                                        "nodeType": "YulTypedName",
                                        "src": "6117:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "6167:24:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6167:24:7",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "6180:11:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "6180:11:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "6171:5:7",
                                        "nodeType": "YulTypedName",
                                        "src": "6171:5:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "6265:21:7",
                                      "nodeType": "YulBlock",
                                      "src": "6265:21:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "6274:5:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "6274:5:7"
                                              },
                                              {
                                                "name": "_1",
                                                "nativeSrc": "6281:2:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "6281:2:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "6267:6:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "6267:6:7"
                                            },
                                            "nativeSrc": "6267:17:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "6267:17:7"
                                          },
                                          "nativeSrc": "6267:17:7",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "6267:17:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "6215:5:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "6215:5:7"
                                        },
                                        {
                                          "name": "_2",
                                          "nativeSrc": "6222:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "6222:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "6212:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "6212:2:7"
                                      },
                                      "nativeSrc": "6212:13:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6212:13:7"
                                    },
                                    "nativeSrc": "6204:82:7",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "6226:26:7",
                                      "nodeType": "YulBlock",
                                      "src": "6226:26:7",
                                      "statements": [
                                        {
                                          "nativeSrc": "6228:22:7",
                                          "nodeType": "YulAssignment",
                                          "src": "6228:22:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "6241:5:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "6241:5:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "6248:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "6248:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "6237:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "6237:3:7"
                                            },
                                            "nativeSrc": "6237:13:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "6237:13:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "6228:5:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "6228:5:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "6208:3:7",
                                      "nodeType": "YulBlock",
                                      "src": "6208:3:7",
                                      "statements": []
                                    },
                                    "src": "6204:82:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "5856:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5856:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5861:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5861:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "5853:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5853:2:7"
                                },
                                "nativeSrc": "5853:11:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5853:11:7"
                              },
                              "nativeSrc": "5850:446:7",
                              "nodeType": "YulIf",
                              "src": "5850:446:7"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "5759:543:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "5812:5:7",
                            "nodeType": "YulTypedName",
                            "src": "5812:5:7",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "5819:3:7",
                            "nodeType": "YulTypedName",
                            "src": "5819:3:7",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "5824:10:7",
                            "nodeType": "YulTypedName",
                            "src": "5824:10:7",
                            "type": ""
                          }
                        ],
                        "src": "5759:543:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "6392:81:7",
                          "nodeType": "YulBlock",
                          "src": "6392:81:7",
                          "statements": [
                            {
                              "nativeSrc": "6402:65:7",
                              "nodeType": "YulAssignment",
                              "src": "6402:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "6417:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "6417:4:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "6435:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "6435:1:7",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "6438:3:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6438:3:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "6431:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6431:3:7"
                                                },
                                                "nativeSrc": "6431:11:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "6431:11:7"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "6448:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "6448:1:7",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "6444:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6444:3:7"
                                                },
                                                "nativeSrc": "6444:6:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "6444:6:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "6427:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "6427:3:7"
                                            },
                                            "nativeSrc": "6427:24:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "6427:24:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "6423:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "6423:3:7"
                                        },
                                        "nativeSrc": "6423:29:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6423:29:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "6413:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "6413:3:7"
                                    },
                                    "nativeSrc": "6413:40:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6413:40:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6459:1:7",
                                        "nodeType": "YulLiteral",
                                        "src": "6459:1:7",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "6462:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "6462:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "6455:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "6455:3:7"
                                    },
                                    "nativeSrc": "6455:11:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6455:11:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "6410:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "6410:2:7"
                                },
                                "nativeSrc": "6410:57:7",
                                "nodeType": "YulFunctionCall",
                                "src": "6410:57:7"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "6402:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "6402:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "6307:166:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "6369:4:7",
                            "nodeType": "YulTypedName",
                            "src": "6369:4:7",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "6375:3:7",
                            "nodeType": "YulTypedName",
                            "src": "6375:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "6383:4:7",
                            "nodeType": "YulTypedName",
                            "src": "6383:4:7",
                            "type": ""
                          }
                        ],
                        "src": "6307:166:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "6574:1249:7",
                          "nodeType": "YulBlock",
                          "src": "6574:1249:7",
                          "statements": [
                            {
                              "nativeSrc": "6584:24:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "6584:24:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "6604:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "6604:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "6598:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "6598:5:7"
                                },
                                "nativeSrc": "6598:10:7",
                                "nodeType": "YulFunctionCall",
                                "src": "6598:10:7"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "6588:6:7",
                                  "nodeType": "YulTypedName",
                                  "src": "6588:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "6651:22:7",
                                "nodeType": "YulBlock",
                                "src": "6651:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "6653:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "6653:16:7"
                                      },
                                      "nativeSrc": "6653:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6653:18:7"
                                    },
                                    "nativeSrc": "6653:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6653:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "6623:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "6623:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6631:18:7",
                                    "nodeType": "YulLiteral",
                                    "src": "6631:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "6620:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "6620:2:7"
                                },
                                "nativeSrc": "6620:30:7",
                                "nodeType": "YulFunctionCall",
                                "src": "6620:30:7"
                              },
                              "nativeSrc": "6617:56:7",
                              "nodeType": "YulIf",
                              "src": "6617:56:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "6726:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "6726:4:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "6764:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "6764:4:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "6758:5:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "6758:5:7"
                                        },
                                        "nativeSrc": "6758:11:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6758:11:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "6732:25:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "6732:25:7"
                                    },
                                    "nativeSrc": "6732:38:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6732:38:7"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "6772:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "6772:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "6682:43:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "6682:43:7"
                                },
                                "nativeSrc": "6682:97:7",
                                "nodeType": "YulFunctionCall",
                                "src": "6682:97:7"
                              },
                              "nativeSrc": "6682:97:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "6682:97:7"
                            },
                            {
                              "nativeSrc": "6788:18:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "6788:18:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "6805:1:7",
                                "nodeType": "YulLiteral",
                                "src": "6805:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "6792:9:7",
                                  "nodeType": "YulTypedName",
                                  "src": "6792:9:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "6815:23:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "6815:23:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "6834:4:7",
                                "nodeType": "YulLiteral",
                                "src": "6834:4:7",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nativeSrc": "6819:11:7",
                                  "nodeType": "YulTypedName",
                                  "src": "6819:11:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "6847:17:7",
                              "nodeType": "YulAssignment",
                              "src": "6847:17:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "6860:4:7",
                                "nodeType": "YulLiteral",
                                "src": "6860:4:7",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "6847:9:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "6847:9:7"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "6910:656:7",
                                    "nodeType": "YulBlock",
                                    "src": "6910:656:7",
                                    "statements": [
                                      {
                                        "nativeSrc": "6924:35:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "6924:35:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "6943:6:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "6943:6:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "6955:2:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "6955:2:7",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "6951:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "6951:3:7"
                                              },
                                              "nativeSrc": "6951:7:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "6951:7:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "6939:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "6939:3:7"
                                          },
                                          "nativeSrc": "6939:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6939:20:7"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "6928:7:7",
                                            "nodeType": "YulTypedName",
                                            "src": "6928:7:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "6972:49:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "6972:49:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "7016:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "7016:4:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "6986:29:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "6986:29:7"
                                          },
                                          "nativeSrc": "6986:35:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6986:35:7"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "6976:6:7",
                                            "nodeType": "YulTypedName",
                                            "src": "6976:6:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "7034:10:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "7034:10:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "7043:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "7043:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "7038:1:7",
                                            "nodeType": "YulTypedName",
                                            "src": "7038:1:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "7121:172:7",
                                          "nodeType": "YulBlock",
                                          "src": "7121:172:7",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "7146:6:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7146:6:7"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "7164:3:7",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7164:3:7"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "7169:9:7",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7169:9:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "7160:3:7",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7160:3:7"
                                                        },
                                                        "nativeSrc": "7160:19:7",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7160:19:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "7154:5:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7154:5:7"
                                                    },
                                                    "nativeSrc": "7154:26:7",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "7154:26:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "7139:6:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7139:6:7"
                                                },
                                                "nativeSrc": "7139:42:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "7139:42:7"
                                              },
                                              "nativeSrc": "7139:42:7",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "7139:42:7"
                                            },
                                            {
                                              "nativeSrc": "7198:24:7",
                                              "nodeType": "YulAssignment",
                                              "src": "7198:24:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "7212:6:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7212:6:7"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "7220:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "7220:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "7208:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7208:3:7"
                                                },
                                                "nativeSrc": "7208:14:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "7208:14:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "7198:6:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7198:6:7"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "7239:40:7",
                                              "nodeType": "YulAssignment",
                                              "src": "7239:40:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "7256:9:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7256:9:7"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nativeSrc": "7267:11:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7267:11:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "7252:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7252:3:7"
                                                },
                                                "nativeSrc": "7252:27:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "7252:27:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "7239:9:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7239:9:7"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "7068:1:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "7068:1:7"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "7071:7:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "7071:7:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "7065:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "7065:2:7"
                                          },
                                          "nativeSrc": "7065:14:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7065:14:7"
                                        },
                                        "nativeSrc": "7057:236:7",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "7080:28:7",
                                          "nodeType": "YulBlock",
                                          "src": "7080:28:7",
                                          "statements": [
                                            {
                                              "nativeSrc": "7082:24:7",
                                              "nodeType": "YulAssignment",
                                              "src": "7082:24:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "7091:1:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7091:1:7"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nativeSrc": "7094:11:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7094:11:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "7087:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7087:3:7"
                                                },
                                                "nativeSrc": "7087:19:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "7087:19:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "7082:1:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7082:1:7"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "7061:3:7",
                                          "nodeType": "YulBlock",
                                          "src": "7061:3:7",
                                          "statements": []
                                        },
                                        "src": "7057:236:7"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "7341:166:7",
                                          "nodeType": "YulBlock",
                                          "src": "7341:166:7",
                                          "statements": [
                                            {
                                              "nativeSrc": "7359:43:7",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "7359:43:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "7386:3:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "7386:3:7"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "7391:9:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "7391:9:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "7382:3:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7382:3:7"
                                                    },
                                                    "nativeSrc": "7382:19:7",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "7382:19:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "7376:5:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7376:5:7"
                                                },
                                                "nativeSrc": "7376:26:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "7376:26:7"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "7363:9:7",
                                                  "nodeType": "YulTypedName",
                                                  "src": "7363:9:7",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "7426:6:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7426:6:7"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "7438:9:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "7438:9:7"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "7465:1:7",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "7465:1:7",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "7468:6:7",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7468:6:7"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "7461:3:7",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7461:3:7"
                                                                    },
                                                                    "nativeSrc": "7461:14:7",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7461:14:7"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "7477:3:7",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7477:3:7",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "7457:3:7",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "7457:3:7"
                                                                },
                                                                "nativeSrc": "7457:24:7",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "7457:24:7"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "7487:1:7",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7487:1:7",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "7483:3:7",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "7483:3:7"
                                                                },
                                                                "nativeSrc": "7483:6:7",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "7483:6:7"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "7453:3:7",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "7453:3:7"
                                                            },
                                                            "nativeSrc": "7453:37:7",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7453:37:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "7449:3:7",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7449:3:7"
                                                        },
                                                        "nativeSrc": "7449:42:7",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7449:42:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "7434:3:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7434:3:7"
                                                    },
                                                    "nativeSrc": "7434:58:7",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "7434:58:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "7419:6:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7419:6:7"
                                                },
                                                "nativeSrc": "7419:74:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "7419:74:7"
                                              },
                                              "nativeSrc": "7419:74:7",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "7419:74:7"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "7312:7:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "7312:7:7"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "7321:6:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "7321:6:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "7309:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "7309:2:7"
                                          },
                                          "nativeSrc": "7309:19:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7309:19:7"
                                        },
                                        "nativeSrc": "7306:201:7",
                                        "nodeType": "YulIf",
                                        "src": "7306:201:7"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "7527:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "7527:4:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "7541:1:7",
                                                      "nodeType": "YulLiteral",
                                                      "src": "7541:1:7",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "7544:6:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7544:6:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "7537:3:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7537:3:7"
                                                  },
                                                  "nativeSrc": "7537:14:7",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "7537:14:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "7553:1:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "7553:1:7",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "7533:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "7533:3:7"
                                              },
                                              "nativeSrc": "7533:22:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "7533:22:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "7520:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "7520:6:7"
                                          },
                                          "nativeSrc": "7520:36:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7520:36:7"
                                        },
                                        "nativeSrc": "7520:36:7",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "7520:36:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "6903:663:7",
                                  "nodeType": "YulCase",
                                  "src": "6903:663:7",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "6908:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "6908:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "7583:234:7",
                                    "nodeType": "YulBlock",
                                    "src": "7583:234:7",
                                    "statements": [
                                      {
                                        "nativeSrc": "7597:14:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "7597:14:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "7610:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "7610:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "7601:5:7",
                                            "nodeType": "YulTypedName",
                                            "src": "7601:5:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "7646:67:7",
                                          "nodeType": "YulBlock",
                                          "src": "7646:67:7",
                                          "statements": [
                                            {
                                              "nativeSrc": "7664:35:7",
                                              "nodeType": "YulAssignment",
                                              "src": "7664:35:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "7683:3:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "7683:3:7"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "7688:9:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "7688:9:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "7679:3:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7679:3:7"
                                                    },
                                                    "nativeSrc": "7679:19:7",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "7679:19:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "7673:5:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7673:5:7"
                                                },
                                                "nativeSrc": "7673:26:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "7673:26:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "7664:5:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7664:5:7"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "7627:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "7627:6:7"
                                        },
                                        "nativeSrc": "7624:89:7",
                                        "nodeType": "YulIf",
                                        "src": "7624:89:7"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "7733:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "7733:4:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "7792:5:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7792:5:7"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "7799:6:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7799:6:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "7739:52:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "7739:52:7"
                                              },
                                              "nativeSrc": "7739:67:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "7739:67:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "7726:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "7726:6:7"
                                          },
                                          "nativeSrc": "7726:81:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7726:81:7"
                                        },
                                        "nativeSrc": "7726:81:7",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "7726:81:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "7575:242:7",
                                  "nodeType": "YulCase",
                                  "src": "7575:242:7",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "6883:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "6883:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6891:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "6891:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "6880:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "6880:2:7"
                                },
                                "nativeSrc": "6880:14:7",
                                "nodeType": "YulFunctionCall",
                                "src": "6880:14:7"
                              },
                              "nativeSrc": "6873:944:7",
                              "nodeType": "YulSwitch",
                              "src": "6873:944:7"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "6478:1345:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "6559:4:7",
                            "nodeType": "YulTypedName",
                            "src": "6559:4:7",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "6565:3:7",
                            "nodeType": "YulTypedName",
                            "src": "6565:3:7",
                            "type": ""
                          }
                        ],
                        "src": "6478:1345:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461014857806370a082311461015d57806395d89b4114610193578063a9059cbb1461019b578063dd62ed3e146101ae578063fe4b84df146101c157600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610120578063313ce56714610133575b600080fd5b6100b66101d4565b6040516100c391906108e5565b60405180910390f35b6100df6100da366004610950565b610297565b60405190151581526020016100c3565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016100c3565b6100df61012e36600461097a565b6102b1565b60005460405160ff90911681526020016100c3565b61015b610156366004610950565b6102d5565b005b61011261016b3660046109b6565b6001600160a01b03166000908152600080516020610cad833981519152602052604090205490565b6100b66102e3565b6100df6101a9366004610950565b610322565b6101126101bc3660046109d8565b610330565b61015b6101cf366004610a0b565b61037a565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace038054606091600080516020610cad8339815191529161021390610a24565b80601f016020809104026020016040519081016040528092919081815260200182805461023f90610a24565b801561028c5780601f106102615761010080835404028352916020019161028c565b820191906000526020600020905b81548152906001019060200180831161026f57829003601f168201915b505050505091505090565b6000336102a58185856104ff565b60019150505b92915050565b6000336102bf858285610511565b6102ca85858561057c565b506001949350505050565b6102df82826105db565b5050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020610cad8339815191529161021390610a24565b6000336102a581858561057c565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156103c05750825b905060008267ffffffffffffffff1660011480156103dd5750303b155b9050811580156103eb575080155b156104095760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561043357845460ff60401b1916600160401b1785555b6104806040518060400160405280601081526020016f22a9219918102a32b9ba102a37b5b2b760811b8152506040518060400160405280600381526020016211551560ea1b815250610611565b6000805460ff191660ff88161790556104b13361049e88600a610b58565b6104ac90633b9aca00610b64565b6105db565b83156104f757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b61050c8383836001610623565b505050565b600061051d8484610330565b90506000198114610576578181101561056757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61057684848484036000610623565b50505050565b6001600160a01b0383166105a657604051634b637e8f60e11b81526000600482015260240161055e565b6001600160a01b0382166105d05760405163ec442f0560e01b81526000600482015260240161055e565b61050c83838361070b565b6001600160a01b0382166106055760405163ec442f0560e01b81526000600482015260240161055e565b6102df6000838361070b565b610619610849565b6102df8282610894565b600080516020610cad8339815191526001600160a01b03851661065c5760405163e602df0560e01b81526000600482015260240161055e565b6001600160a01b03841661068657604051634a1406b160e11b81526000600482015260240161055e565b6001600160a01b0380861660009081526001830160209081526040808320938816835292905220839055811561070457836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516106fb91815260200190565b60405180910390a35b5050505050565b600080516020610cad8339815191526001600160a01b038416610747578181600201600082825461073c9190610b7b565b909155506107b99050565b6001600160a01b0384166000908152602082905260409020548281101561079a5760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161055e565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b0383166107d75760028101805483900390556107f6565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083b91815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661089257604051631afcd79f60e31b815260040160405180910390fd5b565b61089c610849565b600080516020610cad8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036108d68482610bec565b50600481016105768382610bec565b60006020808352835180602085015260005b81811015610913578581018301518582016040015282016108f7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461094b57600080fd5b919050565b6000806040838503121561096357600080fd5b61096c83610934565b946020939093013593505050565b60008060006060848603121561098f57600080fd5b61099884610934565b92506109a660208501610934565b9150604084013590509250925092565b6000602082840312156109c857600080fd5b6109d182610934565b9392505050565b600080604083850312156109eb57600080fd5b6109f483610934565b9150610a0260208401610934565b90509250929050565b600060208284031215610a1d57600080fd5b5035919050565b600181811c90821680610a3857607f821691505b602082108103610a5857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610aaf578160001904821115610a9557610a95610a5e565b80851615610aa257918102915b93841c9390800290610a79565b509250929050565b600082610ac6575060016102ab565b81610ad3575060006102ab565b8160018114610ae95760028114610af357610b0f565b60019150506102ab565b60ff841115610b0457610b04610a5e565b50506001821b6102ab565b5060208310610133831016604e8410600b8410161715610b32575081810a6102ab565b610b3c8383610a74565b8060001904821115610b5057610b50610a5e565b029392505050565b60006109d18383610ab7565b80820281158282048414176102ab576102ab610a5e565b808201808211156102ab576102ab610a5e565b634e487b7160e01b600052604160045260246000fd5b601f82111561050c576000816000526020600020601f850160051c81016020861015610bcd5750805b601f850160051c820191505b818110156104f757828155600101610bd9565b815167ffffffffffffffff811115610c0657610c06610b8e565b610c1a81610c148454610a24565b84610ba4565b602080601f831160018114610c4f5760008415610c375750858301515b600019600386901b1c1916600185901b1785556104f7565b600085815260208120601f198616915b82811015610c7e57888601518255948401946001909101908401610c5f565b5085821015610c9c5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a26469706673582212206acf830dee3e8257986602a15b33b9666dfa0a882eeab6443943c924fc6e166964736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x112 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x213 SWAP1 PUSH2 0xA24 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23F SWAP1 PUSH2 0xA24 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x261 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A5 DUP2 DUP6 DUP6 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BF DUP6 DUP3 DUP6 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x2CA DUP6 DUP6 DUP6 PUSH2 0x57C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DF DUP3 DUP3 PUSH2 0x5DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x213 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A5 DUP2 DUP6 DUP6 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x3C0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x3DD JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3EB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x433 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x480 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x22A9219918102A32B9BA102A37B5B2B7 PUSH1 0x81 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x115515 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x611 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP9 AND OR SWAP1 SSTORE PUSH2 0x4B1 CALLER PUSH2 0x49E DUP9 PUSH1 0xA PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x4AC SWAP1 PUSH4 0x3B9ACA00 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST DUP4 ISZERO PUSH2 0x4F7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x50C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x623 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D DUP5 DUP5 PUSH2 0x330 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x576 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x576 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x623 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x50C DUP4 DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x2DF PUSH1 0x0 DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x619 PUSH2 0x849 JUMP JUMPDEST PUSH2 0x2DF DUP3 DUP3 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x704 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x747 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x73C SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x7B9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7D7 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x83B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x89C PUSH2 0x849 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x8D6 DUP5 DUP3 PUSH2 0xBEC JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x576 DUP4 DUP3 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x913 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8F7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96C DUP4 PUSH2 0x934 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x998 DUP5 PUSH2 0x934 JUMP JUMPDEST SWAP3 POP PUSH2 0x9A6 PUSH1 0x20 DUP6 ADD PUSH2 0x934 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D1 DUP3 PUSH2 0x934 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F4 DUP4 PUSH2 0x934 JUMP JUMPDEST SWAP2 POP PUSH2 0xA02 PUSH1 0x20 DUP5 ADD PUSH2 0x934 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xAAF JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xA95 JUMPI PUSH2 0xA95 PUSH2 0xA5E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xAA2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xA79 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAC6 JUMPI POP PUSH1 0x1 PUSH2 0x2AB JUMP JUMPDEST DUP2 PUSH2 0xAD3 JUMPI POP PUSH1 0x0 PUSH2 0x2AB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xAE9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xAF3 JUMPI PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2AB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB04 JUMPI PUSH2 0xB04 PUSH2 0xA5E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2AB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB32 JUMPI POP DUP2 DUP2 EXP PUSH2 0x2AB JUMP JUMPDEST PUSH2 0xB3C DUP4 DUP4 PUSH2 0xA74 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xB50 JUMPI PUSH2 0xB50 PUSH2 0xA5E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP4 DUP4 PUSH2 0xAB7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2AB JUMPI PUSH2 0x2AB PUSH2 0xA5E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2AB PUSH2 0xA5E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xBCD JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4F7 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBD9 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC06 JUMPI PUSH2 0xC06 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xC14 DUP5 SLOAD PUSH2 0xA24 JUMP JUMPDEST DUP5 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC4F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xC37 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC7E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xC5F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xC9C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00A264697066 PUSH20 0x582212206ACF830DEE3E8257986602A15B33B966 PUSH14 0xFA0A882EEAB6443943C924FC6E16 PUSH10 0x64736F6C634300081800 CALLER ",
              "sourceMap": "161:611:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;5505:186:1;1004:187:7;4191:152:1;4322:14;;4191:152;;;1342:25:7;;;1330:2;1315:18;4191:152:1;1196:177:7;6251:244:1;;;;;;:::i;:::-;;:::i;579:90:6:-;629:5;653:9;579:90;;653:9;;;;1853:36:7;;1841:2;1826:18;579:90:6;1711:184:7;675:95:6;;;;;;:::i;:::-;;:::i;:::-;;4401:171:1;;;;;;:::i;:::-;-1:-1:-1;;;;;4545:20:1;4466:7;4545:20;;;-1:-1:-1;;;;;;;;;;;4545:20:1;;;;;;;4401:171;3268:148;;;:::i;4767:178::-;;;;;;:::i;:::-;;:::i;5003:195::-;;;;;;:::i;:::-;;:::i;354:219:6:-;;;;;;:::i;:::-;;:::i;3011:144:1:-;3141:7;3134:14;;3056:13;;-1:-1:-1;;;;;;;;;;;2359:20:1;3134:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;966:10:2;5632:31:1;966:10:2;5648:7:1;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;;:::o;6251:244::-;6338:4;966:10:2;6394:37:1;6410:4;966:10:2;6425:5:1;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;-1:-1:-1;6484:4:1;;6251:244;-1:-1:-1;;;;6251:244:1:o;675:95:6:-;741:22;747:7;756:6;741:5;:22::i;:::-;675:95;;:::o;3268:148:1:-;3400:9;3393:16;;3315:13;;-1:-1:-1;;;;;;;;;;;2359:20:1;3393:16;;;:::i;4767:178::-;4836:4;966:10:2;4890:27:1;966:10:2;4907:2:1;4911:5;4890:9;:27::i;5003:195::-;-1:-1:-1;;;;;5162:20:1;;;5083:7;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5003:195::o;354:219:6:-;8870:21:0;4302:15;;-1:-1:-1;;;4302:15:0;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:0;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:0;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:0;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:0;-1:-1:-1;;;5013:22:0;;;4979:67;422:39:6::1;;;;;;;;;;;;;;-1:-1:-1::0;;;422:39:6::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;422:39:6::1;;::::0;:12:::1;:39::i;:::-;471:9;:28:::0;;-1:-1:-1;;471:28:6::1;;::::0;::::1;;::::0;;509:44:::1;515:10;537:15;471:28:::0;537:2:::1;:15;:::i;:::-;527:25;::::0;:7:::1;:25;:::i;:::-;509:5;:44::i;:::-;5070:14:0::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:0;;;5142:14;;-1:-1:-1;4752:50:7;;5142:14:0;;4740:2:7;4725:18;5142:14:0;;;;;;;5066:101;4092:1081;;;;;354:219:6;:::o;10264:128:1:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;12092:24;12119:25;12129:5;12136:7;12119:9;:25::i;:::-;12092:52;;-1:-1:-1;;12158:16:1;:37;12154:310;;12234:5;12215:16;:24;12211:130;;;12266:60;;-1:-1:-1;;;12266:60:1;;-1:-1:-1;;;;;5033:32:7;;12266:60:1;;;5015:51:7;5082:18;;;5075:34;;;5125:18;;;5118:34;;;4988:18;;12266:60:1;;;;;;;;12211:130;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12082:388;11993:477;;;:::o;6868:300::-;-1:-1:-1;;;;;6951:18:1;;6947:86;;6992:30;;-1:-1:-1;;;6992:30:1;;7019:1;6992:30;;;5309:51:7;5282:18;;6992:30:1;5163:203:7;6947:86:1;-1:-1:-1;;;;;7046:16:1;;7042:86;;7085:32;;-1:-1:-1;;;7085:32:1;;7114:1;7085:32;;;5309:51:7;5282:18;;7085:32:1;5163:203:7;7042:86:1;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;8996:208::-;-1:-1:-1;;;;;9066:21:1;;9062:91;;9110:32;;-1:-1:-1;;;9110:32:1;;9139:1;9110:32;;;5309:51:7;5282:18;;9110:32:1;5163:203:7;9062:91:1;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;2577:147::-;6931:20:0;:18;:20::i;:::-;2679:38:1::1;2702:5;2709:7;2679:22;:38::i;11224:487::-:0;-1:-1:-1;;;;;;;;;;;;;;;;11389:19:1;;11385:89;;11431:32;;-1:-1:-1;;;11431:32:1;;11460:1;11431:32;;;5309:51:7;5282:18;;11431:32:1;5163:203:7;11385:89:1;-1:-1:-1;;;;;11487:21:1;;11483:90;;11531:31;;-1:-1:-1;;;11531:31:1;;11559:1;11531:31;;;5309:51:7;5282:18;;11531:31:1;5163:203:7;11483:90:1;-1:-1:-1;;;;;11582:20:1;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11629:76;;;;11679:7;-1:-1:-1;;;;;11663:31:1;11672:5;-1:-1:-1;;;;;11663:31:1;;11688:5;11663:31;;;;1342:25:7;;1330:2;1315:18;;1196:177;11663:31:1;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;7483:1170::-;-1:-1:-1;;;;;;;;;;;;;;;;7625:18:1;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7621:546:1;;-1:-1:-1;7621:546:1;;-1:-1:-1;;;;;7837:17:1;;7815:19;7837:17;;;;;;;;;;;7872:19;;;7868:115;;;7918:50;;-1:-1:-1;;;7918:50:1;;-1:-1:-1;;;;;5033:32:7;;7918:50:1;;;5015:51:7;5082:18;;;5075:34;;;5125:18;;;5118:34;;;4988:18;;7918:50:1;4813:345:7;7868:115:1;-1:-1:-1;;;;;8103:17:1;;:11;:17;;;;;;;;;;8123:19;;;;8103:39;;7621:546;-1:-1:-1;;;;;8181:16:1;;8177:429;;8344:14;;;:23;;;;;;;8177:429;;;-1:-1:-1;;;;;8557:15:1;;:11;:15;;;;;;;;;;:24;;;;;;8177:429;8636:2;-1:-1:-1;;;;;8621:25:1;8630:4;-1:-1:-1;;;;;8621:25:1;;8640:5;8621:25;;;;1342::7;;1330:2;1315:18;;1196:177;8621:25:1;;;;;;;;7558:1095;7483:1170;;;:::o;7084:141:0:-;8870:21;8560:40;-1:-1:-1;;;8560:40:0;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:0;;;;;;;;;;;7146:73;7084:141::o;2730:216:1:-;6931:20:0;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2895:7:1;:15:::1;2905:5:::0;2895:7;:15:::1;:::i;:::-;-1:-1:-1::0;2920:9:1::1;::::0;::::1;:19;2932:7:::0;2920:9;:19:::1;:::i;14:548:7:-:0;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:7:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:180::-;2415:6;2468:2;2456:9;2447:7;2443:23;2439:32;2436:52;;;2484:1;2481;2474:12;2436:52;-1:-1:-1;2507:23:7;;2356:180;-1:-1:-1;2356:180:7:o;2541:380::-;2620:1;2616:12;;;;2663;;;2684:61;;2738:4;2730:6;2726:17;2716:27;;2684:61;2791:2;2783:6;2780:14;2760:18;2757:38;2754:161;;2837:10;2832:3;2828:20;2825:1;2818:31;2872:4;2869:1;2862:15;2900:4;2897:1;2890:15;2754:161;;2541:380;;;:::o;2926:127::-;2987:10;2982:3;2978:20;2975:1;2968:31;3018:4;3015:1;3008:15;3042:4;3039:1;3032:15;3058:416;3147:1;3184:5;3147:1;3198:270;3219:7;3209:8;3206:21;3198:270;;;3278:4;3274:1;3270:6;3266:17;3260:4;3257:27;3254:53;;;3287:18;;:::i;:::-;3337:7;3327:8;3323:22;3320:55;;;3357:16;;;;3320:55;3436:22;;;;3396:15;;;;3198:270;;;3202:3;3058:416;;;;;:::o;3479:806::-;3528:5;3558:8;3548:80;;-1:-1:-1;3599:1:7;3613:5;;3548:80;3647:4;3637:76;;-1:-1:-1;3684:1:7;3698:5;;3637:76;3729:4;3747:1;3742:59;;;;3815:1;3810:130;;;;3722:218;;3742:59;3772:1;3763:10;;3786:5;;;3810:130;3847:3;3837:8;3834:17;3831:43;;;3854:18;;:::i;:::-;-1:-1:-1;;3910:1:7;3896:16;;3925:5;;3722:218;;4024:2;4014:8;4011:16;4005:3;3999:4;3996:13;3992:36;3986:2;3976:8;3973:16;3968:2;3962:4;3959:12;3955:35;3952:77;3949:159;;;-1:-1:-1;4061:19:7;;;4093:5;;3949:159;4140:34;4165:8;4159:4;4140:34;:::i;:::-;4210:6;4206:1;4202:6;4198:19;4189:7;4186:32;4183:58;;;4221:18;;:::i;:::-;4259:20;;3479:806;-1:-1:-1;;;3479:806:7:o;4290:131::-;4350:5;4379:36;4406:8;4400:4;4379:36;:::i;4426:168::-;4499:9;;;4530;;4547:15;;;4541:22;;4527:37;4517:71;;4568:18;;:::i;5371:125::-;5436:9;;;5457:10;;;5454:36;;;5470:18;;:::i;5501:127::-;5562:10;5557:3;5553:20;5550:1;5543:31;5593:4;5590:1;5583:15;5617:4;5614:1;5607:15;5759:543;5861:2;5856:3;5853:11;5850:446;;;5897:1;5921:5;5918:1;5911:16;5965:4;5962:1;5952:18;6035:2;6023:10;6019:19;6016:1;6012:27;6006:4;6002:38;6071:4;6059:10;6056:20;6053:47;;;-1:-1:-1;6094:4:7;6053:47;6149:2;6144:3;6140:12;6137:1;6133:20;6127:4;6123:31;6113:41;;6204:82;6222:2;6215:5;6212:13;6204:82;;;6267:17;;;6248:1;6237:13;6204:82;;6478:1345;6604:3;6598:10;6631:18;6623:6;6620:30;6617:56;;;6653:18;;:::i;:::-;6682:97;6772:6;6732:38;6764:4;6758:11;6732:38;:::i;:::-;6726:4;6682:97;:::i;:::-;6834:4;;6891:2;6880:14;;6908:1;6903:663;;;;7610:1;7627:6;7624:89;;;-1:-1:-1;7679:19:7;;;7673:26;7624:89;-1:-1:-1;;6435:1:7;6431:11;;;6427:24;6423:29;6413:40;6459:1;6455:11;;;6410:57;7726:81;;6873:944;;6903:663;5706:1;5699:14;;;5743:4;5730:18;;-1:-1:-1;;6939:20:7;;;7057:236;7071:7;7068:1;7065:14;7057:236;;;7160:19;;;7154:26;7139:42;;7252:27;;;;7220:1;7208:14;;;;7087:19;;7057:236;;;7061:3;7321:6;7312:7;7309:19;7306:201;;;7382:19;;;7376:26;-1:-1:-1;;7465:1:7;7461:14;;;7477:3;7457:24;7453:37;7449:42;7434:58;7419:74;;7306:201;-1:-1:-1;;;;;7553:1:7;7537:14;;;7533:22;7520:36;;-1:-1:-1;6478:1345:7:o"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "initialize(uint256)": "fe4b84df",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"decimals_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ERC20TestToken2.sol\":\"ERC20TestToken2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/test/ERC20TestToken2.sol\":{\"keccak256\":\"0x1dcb4ff3206cf728e1987d757bca6bb2b5bba75242671f6c7e83a07b1baa6db1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e30e2f6ee8980b4633d3e5f2109d02811f87b2455ff5bcb184646e88f73e32c7\",\"dweb:/ipfs/Qmdxt5sqhHqK4zinh2ayN6U9zVWfTo35LfpihKinDpvNK1\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1165,
                "contract": "contracts/test/ERC20TestToken2.sol:ERC20TestToken2",
                "label": "_decimals",
                "offset": 0,
                "slot": "0",
                "type": "t_uint8"
              }
            ],
            "types": {
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    }
  }
}